#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wookie.Ressource.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BS_PM_Mandant1")]
	public partial class ContactDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InserttblContactAppointment(tblContactAppointment instance);
    partial void UpdatetblContactAppointment(tblContactAppointment instance);
    partial void DeletetblContactAppointment(tblContactAppointment instance);
    partial void InserttblContactAppointmentAttachement(tblContactAppointmentAttachement instance);
    partial void UpdatetblContactAppointmentAttachement(tblContactAppointmentAttachement instance);
    partial void DeletetblContactAppointmentAttachement(tblContactAppointmentAttachement instance);
    partial void InserttblContactAppointmentParticipant(tblContactAppointmentParticipant instance);
    partial void UpdatetblContactAppointmentParticipant(tblContactAppointmentParticipant instance);
    partial void DeletetblContactAppointmentParticipant(tblContactAppointmentParticipant instance);
    partial void InserttblContactCommunication(tblContactCommunication instance);
    partial void UpdatetblContactCommunication(tblContactCommunication instance);
    partial void DeletetblContactCommunication(tblContactCommunication instance);
    partial void InserttblContactData(tblContactData instance);
    partial void UpdatetblContactData(tblContactData instance);
    partial void DeletetblContactData(tblContactData instance);
    partial void InserttlkpContactPrefix(tlkpContactPrefix instance);
    partial void UpdatetlkpContactPrefix(tlkpContactPrefix instance);
    partial void DeletetlkpContactPrefix(tlkpContactPrefix instance);
    partial void InserttlkpContactAppointmentImportance(tlkpContactAppointmentImportance instance);
    partial void UpdatetlkpContactAppointmentImportance(tlkpContactAppointmentImportance instance);
    partial void DeletetlkpContactAppointmentImportance(tlkpContactAppointmentImportance instance);
    partial void InserttlkpContactAppointmentParticipantStatus(tlkpContactAppointmentParticipantStatus instance);
    partial void UpdatetlkpContactAppointmentParticipantStatus(tlkpContactAppointmentParticipantStatus instance);
    partial void DeletetlkpContactAppointmentParticipantStatus(tlkpContactAppointmentParticipantStatus instance);
    partial void InserttlkpContactAppointmentType(tlkpContactAppointmentType instance);
    partial void UpdatetlkpContactAppointmentType(tlkpContactAppointmentType instance);
    partial void DeletetlkpContactAppointmentType(tlkpContactAppointmentType instance);
    partial void InserttlkpContactCommunicationCategory(tlkpContactCommunicationCategory instance);
    partial void UpdatetlkpContactCommunicationCategory(tlkpContactCommunicationCategory instance);
    partial void DeletetlkpContactCommunicationCategory(tlkpContactCommunicationCategory instance);
    partial void InserttlkpContactCommunicationType(tlkpContactCommunicationType instance);
    partial void UpdatetlkpContactCommunicationType(tlkpContactCommunicationType instance);
    partial void DeletetlkpContactCommunicationType(tlkpContactCommunicationType instance);
    partial void InserttlkpContactDocumentType(tlkpContactDocumentType instance);
    partial void UpdatetlkpContactDocumentType(tlkpContactDocumentType instance);
    partial void DeletetlkpContactDocumentType(tlkpContactDocumentType instance);
    partial void InserttlkpContactAddressType(tlkpContactAddressType instance);
    partial void UpdatetlkpContactAddressType(tlkpContactAddressType instance);
    partial void DeletetlkpContactAddressType(tlkpContactAddressType instance);
    partial void InserttblContactAddress(tblContactAddress instance);
    partial void UpdatetblContactAddress(tblContactAddress instance);
    partial void DeletetblContactAddress(tblContactAddress instance);
    partial void InserttlkpCity(tlkpCity instance);
    partial void UpdatetlkpCity(tlkpCity instance);
    partial void DeletetlkpCity(tlkpCity instance);
    partial void InserttlkpCountry(tlkpCountry instance);
    partial void UpdatetlkpCountry(tlkpCountry instance);
    partial void DeletetlkpCountry(tlkpCountry instance);
    partial void InserttlkpFederalState(tlkpFederalState instance);
    partial void UpdatetlkpFederalState(tlkpFederalState instance);
    partial void DeletetlkpFederalState(tlkpFederalState instance);
    partial void InserttblContactDocument(tblContactDocument instance);
    partial void UpdatetblContactDocument(tblContactDocument instance);
    partial void DeletetblContactDocument(tblContactDocument instance);
    partial void InserttblContact(tblContact instance);
    partial void UpdatetblContact(tblContact instance);
    partial void DeletetblContact(tblContact instance);
    #endregion
		
		public ContactDataContext() : 
				base(global::Wookie.Ressource.Database.Properties.Settings.Default.BS_PM_Mandant1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ContactDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContactDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContactDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContactDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblContactAppointment> tblContactAppointment
		{
			get
			{
				return this.GetTable<tblContactAppointment>();
			}
		}
		
		public System.Data.Linq.Table<tblContactAppointmentAttachement> tblContactAppointmentAttachement
		{
			get
			{
				return this.GetTable<tblContactAppointmentAttachement>();
			}
		}
		
		public System.Data.Linq.Table<tblContactAppointmentParticipant> tblContactAppointmentParticipant
		{
			get
			{
				return this.GetTable<tblContactAppointmentParticipant>();
			}
		}
		
		public System.Data.Linq.Table<tblContactCommunication> tblContactCommunication
		{
			get
			{
				return this.GetTable<tblContactCommunication>();
			}
		}
		
		public System.Data.Linq.Table<tblContactData> tblContactData
		{
			get
			{
				return this.GetTable<tblContactData>();
			}
		}
		
		public System.Data.Linq.Table<tlkpContactPrefix> tlkpContactPrefix
		{
			get
			{
				return this.GetTable<tlkpContactPrefix>();
			}
		}
		
		public System.Data.Linq.Table<tlkpContactAppointmentImportance> tlkpContactAppointmentImportance
		{
			get
			{
				return this.GetTable<tlkpContactAppointmentImportance>();
			}
		}
		
		public System.Data.Linq.Table<tlkpContactAppointmentParticipantStatus> tlkpContactAppointmentParticipantStatus
		{
			get
			{
				return this.GetTable<tlkpContactAppointmentParticipantStatus>();
			}
		}
		
		public System.Data.Linq.Table<tlkpContactAppointmentType> tlkpContactAppointmentType
		{
			get
			{
				return this.GetTable<tlkpContactAppointmentType>();
			}
		}
		
		public System.Data.Linq.Table<tlkpContactCommunicationCategory> tlkpContactCommunicationCategory
		{
			get
			{
				return this.GetTable<tlkpContactCommunicationCategory>();
			}
		}
		
		public System.Data.Linq.Table<tlkpContactCommunicationType> tlkpContactCommunicationType
		{
			get
			{
				return this.GetTable<tlkpContactCommunicationType>();
			}
		}
		
		public System.Data.Linq.Table<tlkpContactDocumentType> tlkpContactDocumentType
		{
			get
			{
				return this.GetTable<tlkpContactDocumentType>();
			}
		}
		
		public System.Data.Linq.Table<tlkpContactAddressType> tlkpContactAddressType
		{
			get
			{
				return this.GetTable<tlkpContactAddressType>();
			}
		}
		
		public System.Data.Linq.Table<tblContactAddress> tblContactAddress
		{
			get
			{
				return this.GetTable<tblContactAddress>();
			}
		}
		
		public System.Data.Linq.Table<tlkpCity> tlkpCity
		{
			get
			{
				return this.GetTable<tlkpCity>();
			}
		}
		
		public System.Data.Linq.Table<tlkpCountry> tlkpCountry
		{
			get
			{
				return this.GetTable<tlkpCountry>();
			}
		}
		
		public System.Data.Linq.Table<tlkpFederalState> tlkpFederalState
		{
			get
			{
				return this.GetTable<tlkpFederalState>();
			}
		}
		
		public System.Data.Linq.Table<tblContactDocument> tblContactDocument
		{
			get
			{
				return this.GetTable<tblContactDocument>();
			}
		}
		
		public System.Data.Linq.Table<tblContact> tblContact
		{
			get
			{
				return this.GetTable<tblContact>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblContactAppointment")]
	public partial class tblContactAppointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactAppointment;
		
		private System.Nullable<long> _FKContact;
		
		private System.Nullable<long> _FKContactAppointmentType;
		
		private System.Nullable<long> _FKContactAppointmentImportance;
		
		private System.Nullable<System.DateTime> _StartDateTime;
		
		private System.Nullable<System.DateTime> _EndDateTime;
		
		private string _Subject;
		
		private System.Nullable<bool> _Private;
		
		private string _Location;
		
		private string _Description;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblContactAppointmentAttachement> _tblContactAppointmentAttachement;
		
		private EntitySet<tblContactAppointmentParticipant> _tblContactAppointmentParticipant;
		
		private EntityRef<tlkpContactAppointmentImportance> _tlkpContactAppointmentImportance;
		
		private EntityRef<tlkpContactAppointmentType> _tlkpContactAppointmentType;
		
		private EntityRef<tblContact> _tblContact;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactAppointmentChanging(long value);
    partial void OnPKContactAppointmentChanged();
    partial void OnFKContactChanging(System.Nullable<long> value);
    partial void OnFKContactChanged();
    partial void OnFKContactAppointmentTypeChanging(System.Nullable<long> value);
    partial void OnFKContactAppointmentTypeChanged();
    partial void OnFKContactAppointmentImportanceChanging(System.Nullable<long> value);
    partial void OnFKContactAppointmentImportanceChanged();
    partial void OnStartDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateTimeChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnPrivateChanging(System.Nullable<bool> value);
    partial void OnPrivateChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tblContactAppointment()
		{
			this._tblContactAppointmentAttachement = new EntitySet<tblContactAppointmentAttachement>(new Action<tblContactAppointmentAttachement>(this.attach_tblContactAppointmentAttachement), new Action<tblContactAppointmentAttachement>(this.detach_tblContactAppointmentAttachement));
			this._tblContactAppointmentParticipant = new EntitySet<tblContactAppointmentParticipant>(new Action<tblContactAppointmentParticipant>(this.attach_tblContactAppointmentParticipant), new Action<tblContactAppointmentParticipant>(this.detach_tblContactAppointmentParticipant));
			this._tlkpContactAppointmentImportance = default(EntityRef<tlkpContactAppointmentImportance>);
			this._tlkpContactAppointmentType = default(EntityRef<tlkpContactAppointmentType>);
			this._tblContact = default(EntityRef<tblContact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactAppointment", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactAppointment
		{
			get
			{
				return this._PKContactAppointment;
			}
			set
			{
				if ((this._PKContactAppointment != value))
				{
					this.OnPKContactAppointmentChanging(value);
					this.SendPropertyChanging();
					this._PKContactAppointment = value;
					this.SendPropertyChanged("PKContactAppointment");
					this.OnPKContactAppointmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContact", DbType="BigInt")]
		public System.Nullable<long> FKContact
		{
			get
			{
				return this._FKContact;
			}
			set
			{
				if ((this._FKContact != value))
				{
					if (this._tblContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactChanging(value);
					this.SendPropertyChanging();
					this._FKContact = value;
					this.SendPropertyChanged("FKContact");
					this.OnFKContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactAppointmentType", DbType="BigInt")]
		public System.Nullable<long> FKContactAppointmentType
		{
			get
			{
				return this._FKContactAppointmentType;
			}
			set
			{
				if ((this._FKContactAppointmentType != value))
				{
					if (this._tlkpContactAppointmentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactAppointmentTypeChanging(value);
					this.SendPropertyChanging();
					this._FKContactAppointmentType = value;
					this.SendPropertyChanged("FKContactAppointmentType");
					this.OnFKContactAppointmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactAppointmentImportance", DbType="BigInt")]
		public System.Nullable<long> FKContactAppointmentImportance
		{
			get
			{
				return this._FKContactAppointmentImportance;
			}
			set
			{
				if ((this._FKContactAppointmentImportance != value))
				{
					if (this._tlkpContactAppointmentImportance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactAppointmentImportanceChanging(value);
					this.SendPropertyChanging();
					this._FKContactAppointmentImportance = value;
					this.SendPropertyChanged("FKContactAppointmentImportance");
					this.OnFKContactAppointmentImportanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(512)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Private", DbType="Bit")]
		public System.Nullable<bool> Private
		{
			get
			{
				return this._Private;
			}
			set
			{
				if ((this._Private != value))
				{
					this.OnPrivateChanging(value);
					this.SendPropertyChanging();
					this._Private = value;
					this.SendPropertyChanged("Private");
					this.OnPrivateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(512)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContactAppointment_tblContactAppointmentAttachement", Storage="_tblContactAppointmentAttachement", ThisKey="PKContactAppointment", OtherKey="FKContactAppointment")]
		public EntitySet<tblContactAppointmentAttachement> tblContactAppointmentAttachement
		{
			get
			{
				return this._tblContactAppointmentAttachement;
			}
			set
			{
				this._tblContactAppointmentAttachement.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContactAppointment_tblContactAppointmentParticipant", Storage="_tblContactAppointmentParticipant", ThisKey="PKContactAppointment", OtherKey="FKContactAppointment")]
		public EntitySet<tblContactAppointmentParticipant> tblContactAppointmentParticipant
		{
			get
			{
				return this._tblContactAppointmentParticipant;
			}
			set
			{
				this._tblContactAppointmentParticipant.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactAppointmentImportance_tblContactAppointment", Storage="_tlkpContactAppointmentImportance", ThisKey="FKContactAppointmentImportance", OtherKey="PKContactAppointmentImportance", IsForeignKey=true)]
		public tlkpContactAppointmentImportance tlkpContactAppointmentImportance
		{
			get
			{
				return this._tlkpContactAppointmentImportance.Entity;
			}
			set
			{
				tlkpContactAppointmentImportance previousValue = this._tlkpContactAppointmentImportance.Entity;
				if (((previousValue != value) 
							|| (this._tlkpContactAppointmentImportance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpContactAppointmentImportance.Entity = null;
						previousValue.tblContactAppointment.Remove(this);
					}
					this._tlkpContactAppointmentImportance.Entity = value;
					if ((value != null))
					{
						value.tblContactAppointment.Add(this);
						this._FKContactAppointmentImportance = value.PKContactAppointmentImportance;
					}
					else
					{
						this._FKContactAppointmentImportance = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpContactAppointmentImportance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactAppointmentType_tblContactAppointment", Storage="_tlkpContactAppointmentType", ThisKey="FKContactAppointmentType", OtherKey="PKContactAppointmentType", IsForeignKey=true)]
		public tlkpContactAppointmentType tlkpContactAppointmentType
		{
			get
			{
				return this._tlkpContactAppointmentType.Entity;
			}
			set
			{
				tlkpContactAppointmentType previousValue = this._tlkpContactAppointmentType.Entity;
				if (((previousValue != value) 
							|| (this._tlkpContactAppointmentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpContactAppointmentType.Entity = null;
						previousValue.tblContactAppointment.Remove(this);
					}
					this._tlkpContactAppointmentType.Entity = value;
					if ((value != null))
					{
						value.tblContactAppointment.Add(this);
						this._FKContactAppointmentType = value.PKContactAppointmentType;
					}
					else
					{
						this._FKContactAppointmentType = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpContactAppointmentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContact_tblContactAppointment", Storage="_tblContact", ThisKey="FKContact", OtherKey="PKContact", IsForeignKey=true)]
		public tblContact tblContact
		{
			get
			{
				return this._tblContact.Entity;
			}
			set
			{
				tblContact previousValue = this._tblContact.Entity;
				if (((previousValue != value) 
							|| (this._tblContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblContact.Entity = null;
						previousValue.tblContactAppointment.Remove(this);
					}
					this._tblContact.Entity = value;
					if ((value != null))
					{
						value.tblContactAppointment.Add(this);
						this._FKContact = value.PKContact;
					}
					else
					{
						this._FKContact = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblContact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContactAppointmentAttachement(tblContactAppointmentAttachement entity)
		{
			this.SendPropertyChanging();
			entity.tblContactAppointment = this;
		}
		
		private void detach_tblContactAppointmentAttachement(tblContactAppointmentAttachement entity)
		{
			this.SendPropertyChanging();
			entity.tblContactAppointment = null;
		}
		
		private void attach_tblContactAppointmentParticipant(tblContactAppointmentParticipant entity)
		{
			this.SendPropertyChanging();
			entity.tblContactAppointment = this;
		}
		
		private void detach_tblContactAppointmentParticipant(tblContactAppointmentParticipant entity)
		{
			this.SendPropertyChanging();
			entity.tblContactAppointment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblContactAppointmentAttachement")]
	public partial class tblContactAppointmentAttachement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactAppointmentAttachement;
		
		private System.Nullable<long> _FKContactAppointment;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Attachement;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntityRef<tblContactAppointment> _tblContactAppointment;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactAppointmentAttachementChanging(long value);
    partial void OnPKContactAppointmentAttachementChanged();
    partial void OnFKContactAppointmentChanging(System.Nullable<long> value);
    partial void OnFKContactAppointmentChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAttachementChanging(System.Data.Linq.Binary value);
    partial void OnAttachementChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tblContactAppointmentAttachement()
		{
			this._tblContactAppointment = default(EntityRef<tblContactAppointment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactAppointmentAttachement", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactAppointmentAttachement
		{
			get
			{
				return this._PKContactAppointmentAttachement;
			}
			set
			{
				if ((this._PKContactAppointmentAttachement != value))
				{
					this.OnPKContactAppointmentAttachementChanging(value);
					this.SendPropertyChanging();
					this._PKContactAppointmentAttachement = value;
					this.SendPropertyChanged("PKContactAppointmentAttachement");
					this.OnPKContactAppointmentAttachementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactAppointment", DbType="BigInt")]
		public System.Nullable<long> FKContactAppointment
		{
			get
			{
				return this._FKContactAppointment;
			}
			set
			{
				if ((this._FKContactAppointment != value))
				{
					if (this._tblContactAppointment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactAppointmentChanging(value);
					this.SendPropertyChanging();
					this._FKContactAppointment = value;
					this.SendPropertyChanged("FKContactAppointment");
					this.OnFKContactAppointmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachement", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachement
		{
			get
			{
				return this._Attachement;
			}
			set
			{
				if ((this._Attachement != value))
				{
					this.OnAttachementChanging(value);
					this.SendPropertyChanging();
					this._Attachement = value;
					this.SendPropertyChanged("Attachement");
					this.OnAttachementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContactAppointment_tblContactAppointmentAttachement", Storage="_tblContactAppointment", ThisKey="FKContactAppointment", OtherKey="PKContactAppointment", IsForeignKey=true)]
		public tblContactAppointment tblContactAppointment
		{
			get
			{
				return this._tblContactAppointment.Entity;
			}
			set
			{
				tblContactAppointment previousValue = this._tblContactAppointment.Entity;
				if (((previousValue != value) 
							|| (this._tblContactAppointment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblContactAppointment.Entity = null;
						previousValue.tblContactAppointmentAttachement.Remove(this);
					}
					this._tblContactAppointment.Entity = value;
					if ((value != null))
					{
						value.tblContactAppointmentAttachement.Add(this);
						this._FKContactAppointment = value.PKContactAppointment;
					}
					else
					{
						this._FKContactAppointment = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblContactAppointment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblContactAppointmentParticipant")]
	public partial class tblContactAppointmentParticipant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactAppointmentParticipant;
		
		private System.Nullable<long> _FKContact;
		
		private System.Nullable<long> _FKContactAppointment;
		
		private System.Nullable<long> _FKContactAppointmentParticipantStatus;
		
		private string _Description;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntityRef<tblContactAppointment> _tblContactAppointment;
		
		private EntityRef<tlkpContactAppointmentParticipantStatus> _tlkpContactAppointmentParticipantStatus;
		
		private EntityRef<tblContact> _tblContact;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactAppointmentParticipantChanging(long value);
    partial void OnPKContactAppointmentParticipantChanged();
    partial void OnFKContactChanging(System.Nullable<long> value);
    partial void OnFKContactChanged();
    partial void OnFKContactAppointmentChanging(System.Nullable<long> value);
    partial void OnFKContactAppointmentChanged();
    partial void OnFKContactAppointmentParticipantStatusChanging(System.Nullable<long> value);
    partial void OnFKContactAppointmentParticipantStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tblContactAppointmentParticipant()
		{
			this._tblContactAppointment = default(EntityRef<tblContactAppointment>);
			this._tlkpContactAppointmentParticipantStatus = default(EntityRef<tlkpContactAppointmentParticipantStatus>);
			this._tblContact = default(EntityRef<tblContact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactAppointmentParticipant", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactAppointmentParticipant
		{
			get
			{
				return this._PKContactAppointmentParticipant;
			}
			set
			{
				if ((this._PKContactAppointmentParticipant != value))
				{
					this.OnPKContactAppointmentParticipantChanging(value);
					this.SendPropertyChanging();
					this._PKContactAppointmentParticipant = value;
					this.SendPropertyChanged("PKContactAppointmentParticipant");
					this.OnPKContactAppointmentParticipantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContact", DbType="BigInt")]
		public System.Nullable<long> FKContact
		{
			get
			{
				return this._FKContact;
			}
			set
			{
				if ((this._FKContact != value))
				{
					if (this._tblContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactChanging(value);
					this.SendPropertyChanging();
					this._FKContact = value;
					this.SendPropertyChanged("FKContact");
					this.OnFKContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactAppointment", DbType="BigInt")]
		public System.Nullable<long> FKContactAppointment
		{
			get
			{
				return this._FKContactAppointment;
			}
			set
			{
				if ((this._FKContactAppointment != value))
				{
					if (this._tblContactAppointment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactAppointmentChanging(value);
					this.SendPropertyChanging();
					this._FKContactAppointment = value;
					this.SendPropertyChanged("FKContactAppointment");
					this.OnFKContactAppointmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactAppointmentParticipantStatus", DbType="BigInt")]
		public System.Nullable<long> FKContactAppointmentParticipantStatus
		{
			get
			{
				return this._FKContactAppointmentParticipantStatus;
			}
			set
			{
				if ((this._FKContactAppointmentParticipantStatus != value))
				{
					if (this._tlkpContactAppointmentParticipantStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactAppointmentParticipantStatusChanging(value);
					this.SendPropertyChanging();
					this._FKContactAppointmentParticipantStatus = value;
					this.SendPropertyChanged("FKContactAppointmentParticipantStatus");
					this.OnFKContactAppointmentParticipantStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContactAppointment_tblContactAppointmentParticipant", Storage="_tblContactAppointment", ThisKey="FKContactAppointment", OtherKey="PKContactAppointment", IsForeignKey=true)]
		public tblContactAppointment tblContactAppointment
		{
			get
			{
				return this._tblContactAppointment.Entity;
			}
			set
			{
				tblContactAppointment previousValue = this._tblContactAppointment.Entity;
				if (((previousValue != value) 
							|| (this._tblContactAppointment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblContactAppointment.Entity = null;
						previousValue.tblContactAppointmentParticipant.Remove(this);
					}
					this._tblContactAppointment.Entity = value;
					if ((value != null))
					{
						value.tblContactAppointmentParticipant.Add(this);
						this._FKContactAppointment = value.PKContactAppointment;
					}
					else
					{
						this._FKContactAppointment = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblContactAppointment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactAppointmentParticipantStatus_tblContactAppointmentParticipant", Storage="_tlkpContactAppointmentParticipantStatus", ThisKey="FKContactAppointmentParticipantStatus", OtherKey="PKContactAppointmentParticipantStatus", IsForeignKey=true)]
		public tlkpContactAppointmentParticipantStatus tlkpContactAppointmentParticipantStatus
		{
			get
			{
				return this._tlkpContactAppointmentParticipantStatus.Entity;
			}
			set
			{
				tlkpContactAppointmentParticipantStatus previousValue = this._tlkpContactAppointmentParticipantStatus.Entity;
				if (((previousValue != value) 
							|| (this._tlkpContactAppointmentParticipantStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpContactAppointmentParticipantStatus.Entity = null;
						previousValue.tblContactAppointmentParticipant.Remove(this);
					}
					this._tlkpContactAppointmentParticipantStatus.Entity = value;
					if ((value != null))
					{
						value.tblContactAppointmentParticipant.Add(this);
						this._FKContactAppointmentParticipantStatus = value.PKContactAppointmentParticipantStatus;
					}
					else
					{
						this._FKContactAppointmentParticipantStatus = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpContactAppointmentParticipantStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContact_tblContactAppointmentParticipant", Storage="_tblContact", ThisKey="FKContact", OtherKey="PKContact", IsForeignKey=true)]
		public tblContact tblContact
		{
			get
			{
				return this._tblContact.Entity;
			}
			set
			{
				tblContact previousValue = this._tblContact.Entity;
				if (((previousValue != value) 
							|| (this._tblContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblContact.Entity = null;
						previousValue.tblContactAppointmentParticipant.Remove(this);
					}
					this._tblContact.Entity = value;
					if ((value != null))
					{
						value.tblContactAppointmentParticipant.Add(this);
						this._FKContact = value.PKContact;
					}
					else
					{
						this._FKContact = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblContact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblContactCommunication")]
	public partial class tblContactCommunication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactCommunication;
		
		private System.Nullable<long> _FKContact;
		
		private System.Nullable<long> _FKContactCommunicationType;
		
		private System.Nullable<long> _FKContactCommunicationCategory;
		
		private string _Communication;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntityRef<tlkpContactCommunicationCategory> _tlkpContactCommunicationCategory;
		
		private EntityRef<tlkpContactCommunicationType> _tlkpContactCommunicationType;
		
		private EntityRef<tblContact> _tblContact;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactCommunicationChanging(long value);
    partial void OnPKContactCommunicationChanged();
    partial void OnFKContactChanging(System.Nullable<long> value);
    partial void OnFKContactChanged();
    partial void OnFKContactCommunicationTypeChanging(System.Nullable<long> value);
    partial void OnFKContactCommunicationTypeChanged();
    partial void OnFKContactCommunicationCategoryChanging(System.Nullable<long> value);
    partial void OnFKContactCommunicationCategoryChanged();
    partial void OnCommunicationChanging(string value);
    partial void OnCommunicationChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tblContactCommunication()
		{
			this._tlkpContactCommunicationCategory = default(EntityRef<tlkpContactCommunicationCategory>);
			this._tlkpContactCommunicationType = default(EntityRef<tlkpContactCommunicationType>);
			this._tblContact = default(EntityRef<tblContact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactCommunication", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactCommunication
		{
			get
			{
				return this._PKContactCommunication;
			}
			set
			{
				if ((this._PKContactCommunication != value))
				{
					this.OnPKContactCommunicationChanging(value);
					this.SendPropertyChanging();
					this._PKContactCommunication = value;
					this.SendPropertyChanged("PKContactCommunication");
					this.OnPKContactCommunicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContact", DbType="BigInt")]
		public System.Nullable<long> FKContact
		{
			get
			{
				return this._FKContact;
			}
			set
			{
				if ((this._FKContact != value))
				{
					if (this._tblContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactChanging(value);
					this.SendPropertyChanging();
					this._FKContact = value;
					this.SendPropertyChanged("FKContact");
					this.OnFKContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactCommunicationType", DbType="BigInt")]
		public System.Nullable<long> FKContactCommunicationType
		{
			get
			{
				return this._FKContactCommunicationType;
			}
			set
			{
				if ((this._FKContactCommunicationType != value))
				{
					if (this._tlkpContactCommunicationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactCommunicationTypeChanging(value);
					this.SendPropertyChanging();
					this._FKContactCommunicationType = value;
					this.SendPropertyChanged("FKContactCommunicationType");
					this.OnFKContactCommunicationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactCommunicationCategory", DbType="BigInt")]
		public System.Nullable<long> FKContactCommunicationCategory
		{
			get
			{
				return this._FKContactCommunicationCategory;
			}
			set
			{
				if ((this._FKContactCommunicationCategory != value))
				{
					if (this._tlkpContactCommunicationCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactCommunicationCategoryChanging(value);
					this.SendPropertyChanging();
					this._FKContactCommunicationCategory = value;
					this.SendPropertyChanged("FKContactCommunicationCategory");
					this.OnFKContactCommunicationCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Communication", DbType="NVarChar(255)")]
		public string Communication
		{
			get
			{
				return this._Communication;
			}
			set
			{
				if ((this._Communication != value))
				{
					this.OnCommunicationChanging(value);
					this.SendPropertyChanging();
					this._Communication = value;
					this.SendPropertyChanged("Communication");
					this.OnCommunicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactCommunicationCategory_tblContactCommunication", Storage="_tlkpContactCommunicationCategory", ThisKey="FKContactCommunicationCategory", OtherKey="PKContactCommunicationCategory", IsForeignKey=true)]
		public tlkpContactCommunicationCategory tlkpContactCommunicationCategory
		{
			get
			{
				return this._tlkpContactCommunicationCategory.Entity;
			}
			set
			{
				tlkpContactCommunicationCategory previousValue = this._tlkpContactCommunicationCategory.Entity;
				if (((previousValue != value) 
							|| (this._tlkpContactCommunicationCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpContactCommunicationCategory.Entity = null;
						previousValue.tblContactCommunication.Remove(this);
					}
					this._tlkpContactCommunicationCategory.Entity = value;
					if ((value != null))
					{
						value.tblContactCommunication.Add(this);
						this._FKContactCommunicationCategory = value.PKContactCommunicationCategory;
					}
					else
					{
						this._FKContactCommunicationCategory = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpContactCommunicationCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactCommunicationType_tblContactCommunication", Storage="_tlkpContactCommunicationType", ThisKey="FKContactCommunicationType", OtherKey="PKContactCommunicationType", IsForeignKey=true)]
		public tlkpContactCommunicationType tlkpContactCommunicationType
		{
			get
			{
				return this._tlkpContactCommunicationType.Entity;
			}
			set
			{
				tlkpContactCommunicationType previousValue = this._tlkpContactCommunicationType.Entity;
				if (((previousValue != value) 
							|| (this._tlkpContactCommunicationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpContactCommunicationType.Entity = null;
						previousValue.tblContactCommunication.Remove(this);
					}
					this._tlkpContactCommunicationType.Entity = value;
					if ((value != null))
					{
						value.tblContactCommunication.Add(this);
						this._FKContactCommunicationType = value.PKContactCommunicationType;
					}
					else
					{
						this._FKContactCommunicationType = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpContactCommunicationType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContact_tblContactCommunication", Storage="_tblContact", ThisKey="FKContact", OtherKey="PKContact", IsForeignKey=true)]
		public tblContact tblContact
		{
			get
			{
				return this._tblContact.Entity;
			}
			set
			{
				tblContact previousValue = this._tblContact.Entity;
				if (((previousValue != value) 
							|| (this._tblContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblContact.Entity = null;
						previousValue.tblContactCommunication.Remove(this);
					}
					this._tblContact.Entity = value;
					if ((value != null))
					{
						value.tblContactCommunication.Add(this);
						this._FKContact = value.PKContact;
					}
					else
					{
						this._FKContact = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblContact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblContactData")]
	public partial class tblContactData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactData;
		
		private string _Name;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblContact> _tblContact;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactDataChanging(long value);
    partial void OnPKContactDataChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tblContactData()
		{
			this._tblContact = new EntitySet<tblContact>(new Action<tblContact>(this.attach_tblContact), new Action<tblContact>(this.detach_tblContact));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactData", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactData
		{
			get
			{
				return this._PKContactData;
			}
			set
			{
				if ((this._PKContactData != value))
				{
					this.OnPKContactDataChanging(value);
					this.SendPropertyChanging();
					this._PKContactData = value;
					this.SendPropertyChanged("PKContactData");
					this.OnPKContactDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContactData_tblContact", Storage="_tblContact", ThisKey="PKContactData", OtherKey="FKContactData")]
		public EntitySet<tblContact> tblContact
		{
			get
			{
				return this._tblContact;
			}
			set
			{
				this._tblContact.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContact(tblContact entity)
		{
			this.SendPropertyChanging();
			entity.tblContactData = this;
		}
		
		private void detach_tblContact(tblContact entity)
		{
			this.SendPropertyChanging();
			entity.tblContactData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpContactPrefix")]
	public partial class tlkpContactPrefix : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactPrefix;
		
		private string _Name;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblContact> _tblContact;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactPrefixChanging(long value);
    partial void OnPKContactPrefixChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpContactPrefix()
		{
			this._tblContact = new EntitySet<tblContact>(new Action<tblContact>(this.attach_tblContact), new Action<tblContact>(this.detach_tblContact));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactPrefix", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactPrefix
		{
			get
			{
				return this._PKContactPrefix;
			}
			set
			{
				if ((this._PKContactPrefix != value))
				{
					this.OnPKContactPrefixChanging(value);
					this.SendPropertyChanging();
					this._PKContactPrefix = value;
					this.SendPropertyChanged("PKContactPrefix");
					this.OnPKContactPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactPrefix_tblContact", Storage="_tblContact", ThisKey="PKContactPrefix", OtherKey="FKContactPrefix")]
		public EntitySet<tblContact> tblContact
		{
			get
			{
				return this._tblContact;
			}
			set
			{
				this._tblContact.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContact(tblContact entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactPrefix = this;
		}
		
		private void detach_tblContact(tblContact entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactPrefix = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpContactAppointmentImportance")]
	public partial class tlkpContactAppointmentImportance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactAppointmentImportance;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblContactAppointment> _tblContactAppointment;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactAppointmentImportanceChanging(long value);
    partial void OnPKContactAppointmentImportanceChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpContactAppointmentImportance()
		{
			this._tblContactAppointment = new EntitySet<tblContactAppointment>(new Action<tblContactAppointment>(this.attach_tblContactAppointment), new Action<tblContactAppointment>(this.detach_tblContactAppointment));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactAppointmentImportance", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactAppointmentImportance
		{
			get
			{
				return this._PKContactAppointmentImportance;
			}
			set
			{
				if ((this._PKContactAppointmentImportance != value))
				{
					this.OnPKContactAppointmentImportanceChanging(value);
					this.SendPropertyChanging();
					this._PKContactAppointmentImportance = value;
					this.SendPropertyChanged("PKContactAppointmentImportance");
					this.OnPKContactAppointmentImportanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactAppointmentImportance_tblContactAppointment", Storage="_tblContactAppointment", ThisKey="PKContactAppointmentImportance", OtherKey="FKContactAppointmentImportance")]
		public EntitySet<tblContactAppointment> tblContactAppointment
		{
			get
			{
				return this._tblContactAppointment;
			}
			set
			{
				this._tblContactAppointment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContactAppointment(tblContactAppointment entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactAppointmentImportance = this;
		}
		
		private void detach_tblContactAppointment(tblContactAppointment entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactAppointmentImportance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpContactAppointmentParticipantStatus")]
	public partial class tlkpContactAppointmentParticipantStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactAppointmentParticipantStatus;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblContactAppointmentParticipant> _tblContactAppointmentParticipant;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactAppointmentParticipantStatusChanging(long value);
    partial void OnPKContactAppointmentParticipantStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpContactAppointmentParticipantStatus()
		{
			this._tblContactAppointmentParticipant = new EntitySet<tblContactAppointmentParticipant>(new Action<tblContactAppointmentParticipant>(this.attach_tblContactAppointmentParticipant), new Action<tblContactAppointmentParticipant>(this.detach_tblContactAppointmentParticipant));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactAppointmentParticipantStatus", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactAppointmentParticipantStatus
		{
			get
			{
				return this._PKContactAppointmentParticipantStatus;
			}
			set
			{
				if ((this._PKContactAppointmentParticipantStatus != value))
				{
					this.OnPKContactAppointmentParticipantStatusChanging(value);
					this.SendPropertyChanging();
					this._PKContactAppointmentParticipantStatus = value;
					this.SendPropertyChanged("PKContactAppointmentParticipantStatus");
					this.OnPKContactAppointmentParticipantStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactAppointmentParticipantStatus_tblContactAppointmentParticipant", Storage="_tblContactAppointmentParticipant", ThisKey="PKContactAppointmentParticipantStatus", OtherKey="FKContactAppointmentParticipantStatus")]
		public EntitySet<tblContactAppointmentParticipant> tblContactAppointmentParticipant
		{
			get
			{
				return this._tblContactAppointmentParticipant;
			}
			set
			{
				this._tblContactAppointmentParticipant.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContactAppointmentParticipant(tblContactAppointmentParticipant entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactAppointmentParticipantStatus = this;
		}
		
		private void detach_tblContactAppointmentParticipant(tblContactAppointmentParticipant entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactAppointmentParticipantStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpContactAppointmentType")]
	public partial class tlkpContactAppointmentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactAppointmentType;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblContactAppointment> _tblContactAppointment;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactAppointmentTypeChanging(long value);
    partial void OnPKContactAppointmentTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpContactAppointmentType()
		{
			this._tblContactAppointment = new EntitySet<tblContactAppointment>(new Action<tblContactAppointment>(this.attach_tblContactAppointment), new Action<tblContactAppointment>(this.detach_tblContactAppointment));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactAppointmentType", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactAppointmentType
		{
			get
			{
				return this._PKContactAppointmentType;
			}
			set
			{
				if ((this._PKContactAppointmentType != value))
				{
					this.OnPKContactAppointmentTypeChanging(value);
					this.SendPropertyChanging();
					this._PKContactAppointmentType = value;
					this.SendPropertyChanged("PKContactAppointmentType");
					this.OnPKContactAppointmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactAppointmentType_tblContactAppointment", Storage="_tblContactAppointment", ThisKey="PKContactAppointmentType", OtherKey="FKContactAppointmentType")]
		public EntitySet<tblContactAppointment> tblContactAppointment
		{
			get
			{
				return this._tblContactAppointment;
			}
			set
			{
				this._tblContactAppointment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContactAppointment(tblContactAppointment entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactAppointmentType = this;
		}
		
		private void detach_tblContactAppointment(tblContactAppointment entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactAppointmentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpContactCommunicationCategory")]
	public partial class tlkpContactCommunicationCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactCommunicationCategory;
		
		private string _Description;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblContactCommunication> _tblContactCommunication;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactCommunicationCategoryChanging(long value);
    partial void OnPKContactCommunicationCategoryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpContactCommunicationCategory()
		{
			this._tblContactCommunication = new EntitySet<tblContactCommunication>(new Action<tblContactCommunication>(this.attach_tblContactCommunication), new Action<tblContactCommunication>(this.detach_tblContactCommunication));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactCommunicationCategory", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactCommunicationCategory
		{
			get
			{
				return this._PKContactCommunicationCategory;
			}
			set
			{
				if ((this._PKContactCommunicationCategory != value))
				{
					this.OnPKContactCommunicationCategoryChanging(value);
					this.SendPropertyChanging();
					this._PKContactCommunicationCategory = value;
					this.SendPropertyChanged("PKContactCommunicationCategory");
					this.OnPKContactCommunicationCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactCommunicationCategory_tblContactCommunication", Storage="_tblContactCommunication", ThisKey="PKContactCommunicationCategory", OtherKey="FKContactCommunicationCategory")]
		public EntitySet<tblContactCommunication> tblContactCommunication
		{
			get
			{
				return this._tblContactCommunication;
			}
			set
			{
				this._tblContactCommunication.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContactCommunication(tblContactCommunication entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactCommunicationCategory = this;
		}
		
		private void detach_tblContactCommunication(tblContactCommunication entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactCommunicationCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpContactCommunicationType")]
	public partial class tlkpContactCommunicationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactCommunicationType;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblContactCommunication> _tblContactCommunication;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactCommunicationTypeChanging(long value);
    partial void OnPKContactCommunicationTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpContactCommunicationType()
		{
			this._tblContactCommunication = new EntitySet<tblContactCommunication>(new Action<tblContactCommunication>(this.attach_tblContactCommunication), new Action<tblContactCommunication>(this.detach_tblContactCommunication));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactCommunicationType", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactCommunicationType
		{
			get
			{
				return this._PKContactCommunicationType;
			}
			set
			{
				if ((this._PKContactCommunicationType != value))
				{
					this.OnPKContactCommunicationTypeChanging(value);
					this.SendPropertyChanging();
					this._PKContactCommunicationType = value;
					this.SendPropertyChanged("PKContactCommunicationType");
					this.OnPKContactCommunicationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactCommunicationType_tblContactCommunication", Storage="_tblContactCommunication", ThisKey="PKContactCommunicationType", OtherKey="FKContactCommunicationType")]
		public EntitySet<tblContactCommunication> tblContactCommunication
		{
			get
			{
				return this._tblContactCommunication;
			}
			set
			{
				this._tblContactCommunication.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContactCommunication(tblContactCommunication entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactCommunicationType = this;
		}
		
		private void detach_tblContactCommunication(tblContactCommunication entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactCommunicationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpContactDocumentType")]
	public partial class tlkpContactDocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactDocumentType;
		
		private string _Name;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblContactDocument> _tblContactDocument;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactDocumentTypeChanging(long value);
    partial void OnPKContactDocumentTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpContactDocumentType()
		{
			this._tblContactDocument = new EntitySet<tblContactDocument>(new Action<tblContactDocument>(this.attach_tblContactDocument), new Action<tblContactDocument>(this.detach_tblContactDocument));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactDocumentType", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactDocumentType
		{
			get
			{
				return this._PKContactDocumentType;
			}
			set
			{
				if ((this._PKContactDocumentType != value))
				{
					this.OnPKContactDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._PKContactDocumentType = value;
					this.SendPropertyChanged("PKContactDocumentType");
					this.OnPKContactDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactDocumentType_tblContactDocument", Storage="_tblContactDocument", ThisKey="PKContactDocumentType", OtherKey="FKContactDocumentType")]
		public EntitySet<tblContactDocument> tblContactDocument
		{
			get
			{
				return this._tblContactDocument;
			}
			set
			{
				this._tblContactDocument.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContactDocument(tblContactDocument entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactDocumentType = this;
		}
		
		private void detach_tblContactDocument(tblContactDocument entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactDocumentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpContactAddressType")]
	public partial class tlkpContactAddressType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactAddressType;
		
		private string _Name;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblContactAddress> _tblContactAddress;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactAddressTypeChanging(long value);
    partial void OnPKContactAddressTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpContactAddressType()
		{
			this._tblContactAddress = new EntitySet<tblContactAddress>(new Action<tblContactAddress>(this.attach_tblContactAddress), new Action<tblContactAddress>(this.detach_tblContactAddress));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactAddressType", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactAddressType
		{
			get
			{
				return this._PKContactAddressType;
			}
			set
			{
				if ((this._PKContactAddressType != value))
				{
					this.OnPKContactAddressTypeChanging(value);
					this.SendPropertyChanging();
					this._PKContactAddressType = value;
					this.SendPropertyChanged("PKContactAddressType");
					this.OnPKContactAddressTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactAddressType_tblContactAddress", Storage="_tblContactAddress", ThisKey="PKContactAddressType", OtherKey="FKContactAddressType")]
		public EntitySet<tblContactAddress> tblContactAddress
		{
			get
			{
				return this._tblContactAddress;
			}
			set
			{
				this._tblContactAddress.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContactAddress(tblContactAddress entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactAddressType = this;
		}
		
		private void detach_tblContactAddress(tblContactAddress entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactAddressType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblContactAddress")]
	public partial class tblContactAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactAddress;
		
		private System.Nullable<long> _FKContact;
		
		private System.Nullable<long> _FKCity;
		
		private System.Nullable<long> _FKContactAddressType;
		
		private string _Street;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntityRef<tlkpContactAddressType> _tlkpContactAddressType;
		
		private EntityRef<tlkpCity> _tlkpCity;
		
		private EntityRef<tblContact> _tblContact;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactAddressChanging(long value);
    partial void OnPKContactAddressChanged();
    partial void OnFKContactChanging(System.Nullable<long> value);
    partial void OnFKContactChanged();
    partial void OnFKCityChanging(System.Nullable<long> value);
    partial void OnFKCityChanged();
    partial void OnFKContactAddressTypeChanging(System.Nullable<long> value);
    partial void OnFKContactAddressTypeChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tblContactAddress()
		{
			this._tlkpContactAddressType = default(EntityRef<tlkpContactAddressType>);
			this._tlkpCity = default(EntityRef<tlkpCity>);
			this._tblContact = default(EntityRef<tblContact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactAddress", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactAddress
		{
			get
			{
				return this._PKContactAddress;
			}
			set
			{
				if ((this._PKContactAddress != value))
				{
					this.OnPKContactAddressChanging(value);
					this.SendPropertyChanging();
					this._PKContactAddress = value;
					this.SendPropertyChanged("PKContactAddress");
					this.OnPKContactAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContact", DbType="BigInt")]
		public System.Nullable<long> FKContact
		{
			get
			{
				return this._FKContact;
			}
			set
			{
				if ((this._FKContact != value))
				{
					if (this._tblContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactChanging(value);
					this.SendPropertyChanging();
					this._FKContact = value;
					this.SendPropertyChanged("FKContact");
					this.OnFKContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKCity", DbType="BigInt")]
		public System.Nullable<long> FKCity
		{
			get
			{
				return this._FKCity;
			}
			set
			{
				if ((this._FKCity != value))
				{
					if (this._tlkpCity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKCityChanging(value);
					this.SendPropertyChanging();
					this._FKCity = value;
					this.SendPropertyChanged("FKCity");
					this.OnFKCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactAddressType", DbType="BigInt")]
		public System.Nullable<long> FKContactAddressType
		{
			get
			{
				return this._FKContactAddressType;
			}
			set
			{
				if ((this._FKContactAddressType != value))
				{
					if (this._tlkpContactAddressType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactAddressTypeChanging(value);
					this.SendPropertyChanging();
					this._FKContactAddressType = value;
					this.SendPropertyChanged("FKContactAddressType");
					this.OnFKContactAddressTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(255)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactAddressType_tblContactAddress", Storage="_tlkpContactAddressType", ThisKey="FKContactAddressType", OtherKey="PKContactAddressType", IsForeignKey=true)]
		public tlkpContactAddressType tlkpContactAddressType
		{
			get
			{
				return this._tlkpContactAddressType.Entity;
			}
			set
			{
				tlkpContactAddressType previousValue = this._tlkpContactAddressType.Entity;
				if (((previousValue != value) 
							|| (this._tlkpContactAddressType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpContactAddressType.Entity = null;
						previousValue.tblContactAddress.Remove(this);
					}
					this._tlkpContactAddressType.Entity = value;
					if ((value != null))
					{
						value.tblContactAddress.Add(this);
						this._FKContactAddressType = value.PKContactAddressType;
					}
					else
					{
						this._FKContactAddressType = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpContactAddressType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpCity_tblContactAddress", Storage="_tlkpCity", ThisKey="FKCity", OtherKey="PKCity", IsForeignKey=true)]
		public tlkpCity tlkpCity
		{
			get
			{
				return this._tlkpCity.Entity;
			}
			set
			{
				tlkpCity previousValue = this._tlkpCity.Entity;
				if (((previousValue != value) 
							|| (this._tlkpCity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpCity.Entity = null;
						previousValue.tblContactAddress.Remove(this);
					}
					this._tlkpCity.Entity = value;
					if ((value != null))
					{
						value.tblContactAddress.Add(this);
						this._FKCity = value.PKCity;
					}
					else
					{
						this._FKCity = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpCity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContact_tblContactAddress", Storage="_tblContact", ThisKey="FKContact", OtherKey="PKContact", IsForeignKey=true)]
		public tblContact tblContact
		{
			get
			{
				return this._tblContact.Entity;
			}
			set
			{
				tblContact previousValue = this._tblContact.Entity;
				if (((previousValue != value) 
							|| (this._tblContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblContact.Entity = null;
						previousValue.tblContactAddress.Remove(this);
					}
					this._tblContact.Entity = value;
					if ((value != null))
					{
						value.tblContactAddress.Add(this);
						this._FKContact = value.PKContact;
					}
					else
					{
						this._FKContact = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblContact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpCity")]
	public partial class tlkpCity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKCity;
		
		private System.Nullable<long> _FKFederalState;
		
		private string _Name;
		
		private System.Nullable<int> _Zipcode;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblContactAddress> _tblContactAddress;
		
		private EntitySet<tblContact> _tblContact;
		
		private EntityRef<tlkpFederalState> _tlkpFederalState;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKCityChanging(long value);
    partial void OnPKCityChanged();
    partial void OnFKFederalStateChanging(System.Nullable<long> value);
    partial void OnFKFederalStateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnZipcodeChanging(System.Nullable<int> value);
    partial void OnZipcodeChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpCity()
		{
			this._tblContactAddress = new EntitySet<tblContactAddress>(new Action<tblContactAddress>(this.attach_tblContactAddress), new Action<tblContactAddress>(this.detach_tblContactAddress));
			this._tblContact = new EntitySet<tblContact>(new Action<tblContact>(this.attach_tblContact), new Action<tblContact>(this.detach_tblContact));
			this._tlkpFederalState = default(EntityRef<tlkpFederalState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKCity", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKCity
		{
			get
			{
				return this._PKCity;
			}
			set
			{
				if ((this._PKCity != value))
				{
					this.OnPKCityChanging(value);
					this.SendPropertyChanging();
					this._PKCity = value;
					this.SendPropertyChanged("PKCity");
					this.OnPKCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKFederalState", DbType="BigInt")]
		public System.Nullable<long> FKFederalState
		{
			get
			{
				return this._FKFederalState;
			}
			set
			{
				if ((this._FKFederalState != value))
				{
					if (this._tlkpFederalState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKFederalStateChanging(value);
					this.SendPropertyChanging();
					this._FKFederalState = value;
					this.SendPropertyChanged("FKFederalState");
					this.OnFKFederalStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="Int")]
		public System.Nullable<int> Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpCity_tblContactAddress", Storage="_tblContactAddress", ThisKey="PKCity", OtherKey="FKCity")]
		public EntitySet<tblContactAddress> tblContactAddress
		{
			get
			{
				return this._tblContactAddress;
			}
			set
			{
				this._tblContactAddress.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpCity_tblContact", Storage="_tblContact", ThisKey="PKCity", OtherKey="FKCity")]
		public EntitySet<tblContact> tblContact
		{
			get
			{
				return this._tblContact;
			}
			set
			{
				this._tblContact.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpFederalState_tlkpCity", Storage="_tlkpFederalState", ThisKey="FKFederalState", OtherKey="PKFederalState", IsForeignKey=true)]
		public tlkpFederalState tlkpFederalState
		{
			get
			{
				return this._tlkpFederalState.Entity;
			}
			set
			{
				tlkpFederalState previousValue = this._tlkpFederalState.Entity;
				if (((previousValue != value) 
							|| (this._tlkpFederalState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpFederalState.Entity = null;
						previousValue.tlkpCity.Remove(this);
					}
					this._tlkpFederalState.Entity = value;
					if ((value != null))
					{
						value.tlkpCity.Add(this);
						this._FKFederalState = value.PKFederalState;
					}
					else
					{
						this._FKFederalState = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpFederalState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContactAddress(tblContactAddress entity)
		{
			this.SendPropertyChanging();
			entity.tlkpCity = this;
		}
		
		private void detach_tblContactAddress(tblContactAddress entity)
		{
			this.SendPropertyChanging();
			entity.tlkpCity = null;
		}
		
		private void attach_tblContact(tblContact entity)
		{
			this.SendPropertyChanging();
			entity.tlkpCity = this;
		}
		
		private void detach_tblContact(tblContact entity)
		{
			this.SendPropertyChanging();
			entity.tlkpCity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpCountry")]
	public partial class tlkpCountry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKCountry;
		
		private string _Name;
		
		private string _Shortname;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tlkpFederalState> _tlkpFederalState;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKCountryChanging(long value);
    partial void OnPKCountryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortnameChanging(string value);
    partial void OnShortnameChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpCountry()
		{
			this._tlkpFederalState = new EntitySet<tlkpFederalState>(new Action<tlkpFederalState>(this.attach_tlkpFederalState), new Action<tlkpFederalState>(this.detach_tlkpFederalState));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKCountry", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKCountry
		{
			get
			{
				return this._PKCountry;
			}
			set
			{
				if ((this._PKCountry != value))
				{
					this.OnPKCountryChanging(value);
					this.SendPropertyChanging();
					this._PKCountry = value;
					this.SendPropertyChanged("PKCountry");
					this.OnPKCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortname", DbType="NVarChar(50)")]
		public string Shortname
		{
			get
			{
				return this._Shortname;
			}
			set
			{
				if ((this._Shortname != value))
				{
					this.OnShortnameChanging(value);
					this.SendPropertyChanging();
					this._Shortname = value;
					this.SendPropertyChanged("Shortname");
					this.OnShortnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpCountry_tlkpFederalState", Storage="_tlkpFederalState", ThisKey="PKCountry", OtherKey="FKCountry")]
		public EntitySet<tlkpFederalState> tlkpFederalState
		{
			get
			{
				return this._tlkpFederalState;
			}
			set
			{
				this._tlkpFederalState.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tlkpFederalState(tlkpFederalState entity)
		{
			this.SendPropertyChanging();
			entity.tlkpCountry = this;
		}
		
		private void detach_tlkpFederalState(tlkpFederalState entity)
		{
			this.SendPropertyChanging();
			entity.tlkpCountry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpFederalState")]
	public partial class tlkpFederalState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKFederalState;
		
		private System.Nullable<long> _FKCountry;
		
		private string _Name;
		
		private string _Shortname;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tlkpCity> _tlkpCity;
		
		private EntityRef<tlkpCountry> _tlkpCountry;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKFederalStateChanging(long value);
    partial void OnPKFederalStateChanged();
    partial void OnFKCountryChanging(System.Nullable<long> value);
    partial void OnFKCountryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortnameChanging(string value);
    partial void OnShortnameChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpFederalState()
		{
			this._tlkpCity = new EntitySet<tlkpCity>(new Action<tlkpCity>(this.attach_tlkpCity), new Action<tlkpCity>(this.detach_tlkpCity));
			this._tlkpCountry = default(EntityRef<tlkpCountry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKFederalState", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKFederalState
		{
			get
			{
				return this._PKFederalState;
			}
			set
			{
				if ((this._PKFederalState != value))
				{
					this.OnPKFederalStateChanging(value);
					this.SendPropertyChanging();
					this._PKFederalState = value;
					this.SendPropertyChanged("PKFederalState");
					this.OnPKFederalStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKCountry", DbType="BigInt")]
		public System.Nullable<long> FKCountry
		{
			get
			{
				return this._FKCountry;
			}
			set
			{
				if ((this._FKCountry != value))
				{
					if (this._tlkpCountry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKCountryChanging(value);
					this.SendPropertyChanging();
					this._FKCountry = value;
					this.SendPropertyChanged("FKCountry");
					this.OnFKCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortname", DbType="NVarChar(50)")]
		public string Shortname
		{
			get
			{
				return this._Shortname;
			}
			set
			{
				if ((this._Shortname != value))
				{
					this.OnShortnameChanging(value);
					this.SendPropertyChanging();
					this._Shortname = value;
					this.SendPropertyChanged("Shortname");
					this.OnShortnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpFederalState_tlkpCity", Storage="_tlkpCity", ThisKey="PKFederalState", OtherKey="FKFederalState")]
		public EntitySet<tlkpCity> tlkpCity
		{
			get
			{
				return this._tlkpCity;
			}
			set
			{
				this._tlkpCity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpCountry_tlkpFederalState", Storage="_tlkpCountry", ThisKey="FKCountry", OtherKey="PKCountry", IsForeignKey=true)]
		public tlkpCountry tlkpCountry
		{
			get
			{
				return this._tlkpCountry.Entity;
			}
			set
			{
				tlkpCountry previousValue = this._tlkpCountry.Entity;
				if (((previousValue != value) 
							|| (this._tlkpCountry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpCountry.Entity = null;
						previousValue.tlkpFederalState.Remove(this);
					}
					this._tlkpCountry.Entity = value;
					if ((value != null))
					{
						value.tlkpFederalState.Add(this);
						this._FKCountry = value.PKCountry;
					}
					else
					{
						this._FKCountry = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpCountry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tlkpCity(tlkpCity entity)
		{
			this.SendPropertyChanging();
			entity.tlkpFederalState = this;
		}
		
		private void detach_tlkpCity(tlkpCity entity)
		{
			this.SendPropertyChanging();
			entity.tlkpFederalState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblContactDocument")]
	public partial class tblContactDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactDocument;
		
		private System.Nullable<long> _FKContactDocumentType;
		
		private System.Nullable<long> _FKContact;
		
		private string _Name;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Document;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntityRef<tlkpContactDocumentType> _tlkpContactDocumentType;
		
		private EntityRef<tblContact> _tblContact;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactDocumentChanging(long value);
    partial void OnPKContactDocumentChanged();
    partial void OnFKContactDocumentTypeChanging(System.Nullable<long> value);
    partial void OnFKContactDocumentTypeChanged();
    partial void OnFKContactChanging(System.Nullable<long> value);
    partial void OnFKContactChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDocumentChanging(System.Data.Linq.Binary value);
    partial void OnDocumentChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tblContactDocument()
		{
			this._tlkpContactDocumentType = default(EntityRef<tlkpContactDocumentType>);
			this._tblContact = default(EntityRef<tblContact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactDocument", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactDocument
		{
			get
			{
				return this._PKContactDocument;
			}
			set
			{
				if ((this._PKContactDocument != value))
				{
					this.OnPKContactDocumentChanging(value);
					this.SendPropertyChanging();
					this._PKContactDocument = value;
					this.SendPropertyChanged("PKContactDocument");
					this.OnPKContactDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactDocumentType", DbType="BigInt")]
		public System.Nullable<long> FKContactDocumentType
		{
			get
			{
				return this._FKContactDocumentType;
			}
			set
			{
				if ((this._FKContactDocumentType != value))
				{
					if (this._tlkpContactDocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._FKContactDocumentType = value;
					this.SendPropertyChanged("FKContactDocumentType");
					this.OnFKContactDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContact", DbType="BigInt")]
		public System.Nullable<long> FKContact
		{
			get
			{
				return this._FKContact;
			}
			set
			{
				if ((this._FKContact != value))
				{
					if (this._tblContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactChanging(value);
					this.SendPropertyChanging();
					this._FKContact = value;
					this.SendPropertyChanged("FKContact");
					this.OnFKContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Document", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Document
		{
			get
			{
				return this._Document;
			}
			set
			{
				if ((this._Document != value))
				{
					this.OnDocumentChanging(value);
					this.SendPropertyChanging();
					this._Document = value;
					this.SendPropertyChanged("Document");
					this.OnDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactDocumentType_tblContactDocument", Storage="_tlkpContactDocumentType", ThisKey="FKContactDocumentType", OtherKey="PKContactDocumentType", IsForeignKey=true)]
		public tlkpContactDocumentType tlkpContactDocumentType
		{
			get
			{
				return this._tlkpContactDocumentType.Entity;
			}
			set
			{
				tlkpContactDocumentType previousValue = this._tlkpContactDocumentType.Entity;
				if (((previousValue != value) 
							|| (this._tlkpContactDocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpContactDocumentType.Entity = null;
						previousValue.tblContactDocument.Remove(this);
					}
					this._tlkpContactDocumentType.Entity = value;
					if ((value != null))
					{
						value.tblContactDocument.Add(this);
						this._FKContactDocumentType = value.PKContactDocumentType;
					}
					else
					{
						this._FKContactDocumentType = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpContactDocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContact_tblContactDocument", Storage="_tblContact", ThisKey="FKContact", OtherKey="PKContact", IsForeignKey=true)]
		public tblContact tblContact
		{
			get
			{
				return this._tblContact.Entity;
			}
			set
			{
				tblContact previousValue = this._tblContact.Entity;
				if (((previousValue != value) 
							|| (this._tblContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblContact.Entity = null;
						previousValue.tblContactDocument.Remove(this);
					}
					this._tblContact.Entity = value;
					if ((value != null))
					{
						value.tblContactDocument.Add(this);
						this._FKContact = value.PKContact;
					}
					else
					{
						this._FKContact = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblContact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblContact")]
	public partial class tblContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContact;
		
		private System.Nullable<long> _FKContactData;
		
		private System.Nullable<long> _FKContactPrefix;
		
		private System.Nullable<long> _FKCity;
		
		private string _Title;
		
		private string _Name;
		
		private string _Surname;
		
		private string _Middlename;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<System.DateTime> _Birthdate;
		
		private string _Street;
		
		private System.Data.Linq.Binary _Notes;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblContactAppointment> _tblContactAppointment;
		
		private EntitySet<tblContactAppointmentParticipant> _tblContactAppointmentParticipant;
		
		private EntitySet<tblContactCommunication> _tblContactCommunication;
		
		private EntitySet<tblContactAddress> _tblContactAddress;
		
		private EntitySet<tblContactDocument> _tblContactDocument;
		
		private EntityRef<tblContactData> _tblContactData;
		
		private EntityRef<tlkpCity> _tlkpCity;
		
		private EntityRef<tlkpContactPrefix> _tlkpContactPrefix;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactChanging(long value);
    partial void OnPKContactChanged();
    partial void OnFKContactDataChanging(System.Nullable<long> value);
    partial void OnFKContactDataChanged();
    partial void OnFKContactPrefixChanging(System.Nullable<long> value);
    partial void OnFKContactPrefixChanged();
    partial void OnFKCityChanging(System.Nullable<long> value);
    partial void OnFKCityChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnMiddlenameChanging(string value);
    partial void OnMiddlenameChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnBirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdateChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnNotesChanging(System.Data.Linq.Binary value);
    partial void OnNotesChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tblContact()
		{
			this._tblContactAppointment = new EntitySet<tblContactAppointment>(new Action<tblContactAppointment>(this.attach_tblContactAppointment), new Action<tblContactAppointment>(this.detach_tblContactAppointment));
			this._tblContactAppointmentParticipant = new EntitySet<tblContactAppointmentParticipant>(new Action<tblContactAppointmentParticipant>(this.attach_tblContactAppointmentParticipant), new Action<tblContactAppointmentParticipant>(this.detach_tblContactAppointmentParticipant));
			this._tblContactCommunication = new EntitySet<tblContactCommunication>(new Action<tblContactCommunication>(this.attach_tblContactCommunication), new Action<tblContactCommunication>(this.detach_tblContactCommunication));
			this._tblContactAddress = new EntitySet<tblContactAddress>(new Action<tblContactAddress>(this.attach_tblContactAddress), new Action<tblContactAddress>(this.detach_tblContactAddress));
			this._tblContactDocument = new EntitySet<tblContactDocument>(new Action<tblContactDocument>(this.attach_tblContactDocument), new Action<tblContactDocument>(this.detach_tblContactDocument));
			this._tblContactData = default(EntityRef<tblContactData>);
			this._tlkpCity = default(EntityRef<tlkpCity>);
			this._tlkpContactPrefix = default(EntityRef<tlkpContactPrefix>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContact", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContact
		{
			get
			{
				return this._PKContact;
			}
			set
			{
				if ((this._PKContact != value))
				{
					this.OnPKContactChanging(value);
					this.SendPropertyChanging();
					this._PKContact = value;
					this.SendPropertyChanged("PKContact");
					this.OnPKContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactData", DbType="BigInt")]
		public System.Nullable<long> FKContactData
		{
			get
			{
				return this._FKContactData;
			}
			set
			{
				if ((this._FKContactData != value))
				{
					if (this._tblContactData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactDataChanging(value);
					this.SendPropertyChanging();
					this._FKContactData = value;
					this.SendPropertyChanged("FKContactData");
					this.OnFKContactDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactPrefix", DbType="BigInt")]
		public System.Nullable<long> FKContactPrefix
		{
			get
			{
				return this._FKContactPrefix;
			}
			set
			{
				if ((this._FKContactPrefix != value))
				{
					if (this._tlkpContactPrefix.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactPrefixChanging(value);
					this.SendPropertyChanging();
					this._FKContactPrefix = value;
					this.SendPropertyChanged("FKContactPrefix");
					this.OnFKContactPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKCity", DbType="BigInt")]
		public System.Nullable<long> FKCity
		{
			get
			{
				return this._FKCity;
			}
			set
			{
				if ((this._FKCity != value))
				{
					if (this._tlkpCity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKCityChanging(value);
					this.SendPropertyChanging();
					this._FKCity = value;
					this.SendPropertyChanged("FKCity");
					this.OnFKCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(255)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middlename", DbType="NVarChar(255)")]
		public string Middlename
		{
			get
			{
				return this._Middlename;
			}
			set
			{
				if ((this._Middlename != value))
				{
					this.OnMiddlenameChanging(value);
					this.SendPropertyChanging();
					this._Middlename = value;
					this.SendPropertyChanged("Middlename");
					this.OnMiddlenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(255)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContact_tblContactAppointment", Storage="_tblContactAppointment", ThisKey="PKContact", OtherKey="FKContact")]
		public EntitySet<tblContactAppointment> tblContactAppointment
		{
			get
			{
				return this._tblContactAppointment;
			}
			set
			{
				this._tblContactAppointment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContact_tblContactAppointmentParticipant", Storage="_tblContactAppointmentParticipant", ThisKey="PKContact", OtherKey="FKContact")]
		public EntitySet<tblContactAppointmentParticipant> tblContactAppointmentParticipant
		{
			get
			{
				return this._tblContactAppointmentParticipant;
			}
			set
			{
				this._tblContactAppointmentParticipant.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContact_tblContactCommunication", Storage="_tblContactCommunication", ThisKey="PKContact", OtherKey="FKContact")]
		public EntitySet<tblContactCommunication> tblContactCommunication
		{
			get
			{
				return this._tblContactCommunication;
			}
			set
			{
				this._tblContactCommunication.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContact_tblContactAddress", Storage="_tblContactAddress", ThisKey="PKContact", OtherKey="FKContact")]
		public EntitySet<tblContactAddress> tblContactAddress
		{
			get
			{
				return this._tblContactAddress;
			}
			set
			{
				this._tblContactAddress.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContact_tblContactDocument", Storage="_tblContactDocument", ThisKey="PKContact", OtherKey="FKContact")]
		public EntitySet<tblContactDocument> tblContactDocument
		{
			get
			{
				return this._tblContactDocument;
			}
			set
			{
				this._tblContactDocument.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblContactData_tblContact", Storage="_tblContactData", ThisKey="FKContactData", OtherKey="PKContactData", IsForeignKey=true)]
		public tblContactData tblContactData
		{
			get
			{
				return this._tblContactData.Entity;
			}
			set
			{
				tblContactData previousValue = this._tblContactData.Entity;
				if (((previousValue != value) 
							|| (this._tblContactData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblContactData.Entity = null;
						previousValue.tblContact.Remove(this);
					}
					this._tblContactData.Entity = value;
					if ((value != null))
					{
						value.tblContact.Add(this);
						this._FKContactData = value.PKContactData;
					}
					else
					{
						this._FKContactData = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblContactData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpCity_tblContact", Storage="_tlkpCity", ThisKey="FKCity", OtherKey="PKCity", IsForeignKey=true)]
		public tlkpCity tlkpCity
		{
			get
			{
				return this._tlkpCity.Entity;
			}
			set
			{
				tlkpCity previousValue = this._tlkpCity.Entity;
				if (((previousValue != value) 
							|| (this._tlkpCity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpCity.Entity = null;
						previousValue.tblContact.Remove(this);
					}
					this._tlkpCity.Entity = value;
					if ((value != null))
					{
						value.tblContact.Add(this);
						this._FKCity = value.PKCity;
					}
					else
					{
						this._FKCity = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpCity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactPrefix_tblContact", Storage="_tlkpContactPrefix", ThisKey="FKContactPrefix", OtherKey="PKContactPrefix", IsForeignKey=true)]
		public tlkpContactPrefix tlkpContactPrefix
		{
			get
			{
				return this._tlkpContactPrefix.Entity;
			}
			set
			{
				tlkpContactPrefix previousValue = this._tlkpContactPrefix.Entity;
				if (((previousValue != value) 
							|| (this._tlkpContactPrefix.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpContactPrefix.Entity = null;
						previousValue.tblContact.Remove(this);
					}
					this._tlkpContactPrefix.Entity = value;
					if ((value != null))
					{
						value.tblContact.Add(this);
						this._FKContactPrefix = value.PKContactPrefix;
					}
					else
					{
						this._FKContactPrefix = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpContactPrefix");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContactAppointment(tblContactAppointment entity)
		{
			this.SendPropertyChanging();
			entity.tblContact = this;
		}
		
		private void detach_tblContactAppointment(tblContactAppointment entity)
		{
			this.SendPropertyChanging();
			entity.tblContact = null;
		}
		
		private void attach_tblContactAppointmentParticipant(tblContactAppointmentParticipant entity)
		{
			this.SendPropertyChanging();
			entity.tblContact = this;
		}
		
		private void detach_tblContactAppointmentParticipant(tblContactAppointmentParticipant entity)
		{
			this.SendPropertyChanging();
			entity.tblContact = null;
		}
		
		private void attach_tblContactCommunication(tblContactCommunication entity)
		{
			this.SendPropertyChanging();
			entity.tblContact = this;
		}
		
		private void detach_tblContactCommunication(tblContactCommunication entity)
		{
			this.SendPropertyChanging();
			entity.tblContact = null;
		}
		
		private void attach_tblContactAddress(tblContactAddress entity)
		{
			this.SendPropertyChanging();
			entity.tblContact = this;
		}
		
		private void detach_tblContactAddress(tblContactAddress entity)
		{
			this.SendPropertyChanging();
			entity.tblContact = null;
		}
		
		private void attach_tblContactDocument(tblContactDocument entity)
		{
			this.SendPropertyChanging();
			entity.tblContact = this;
		}
		
		private void detach_tblContactDocument(tblContactDocument entity)
		{
			this.SendPropertyChanging();
			entity.tblContact = null;
		}
	}
}
#pragma warning restore 1591
