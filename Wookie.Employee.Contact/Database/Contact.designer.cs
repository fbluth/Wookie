#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wookie.Employee.Contact.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BS_PM_Mandant1")]
	public partial class ContactDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InserttblContact(tblContact instance);
    partial void UpdatetblContact(tblContact instance);
    partial void DeletetblContact(tblContact instance);
    partial void InserttlkpCity(tlkpCity instance);
    partial void UpdatetlkpCity(tlkpCity instance);
    partial void DeletetlkpCity(tlkpCity instance);
    partial void InserttlkpContactPrefix(tlkpContactPrefix instance);
    partial void UpdatetlkpContactPrefix(tlkpContactPrefix instance);
    partial void DeletetlkpContactPrefix(tlkpContactPrefix instance);
    partial void InserttlkpCountry(tlkpCountry instance);
    partial void UpdatetlkpCountry(tlkpCountry instance);
    partial void DeletetlkpCountry(tlkpCountry instance);
    partial void InserttlkpFederalState(tlkpFederalState instance);
    partial void UpdatetlkpFederalState(tlkpFederalState instance);
    partial void DeletetlkpFederalState(tlkpFederalState instance);
    partial void InserttblDepartment(tblDepartment instance);
    partial void UpdatetblDepartment(tblDepartment instance);
    partial void DeletetblDepartment(tblDepartment instance);
    #endregion
		
		public ContactDataContext() : 
				base(global::Wookie.Employee.Contact.Properties.Settings.Default.BS_PM_Mandant1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ContactDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContactDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContactDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContactDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblContact> tblContact
		{
			get
			{
				return this.GetTable<tblContact>();
			}
		}
		
		public System.Data.Linq.Table<tlkpCity> tlkpCity
		{
			get
			{
				return this.GetTable<tlkpCity>();
			}
		}
		
		public System.Data.Linq.Table<tlkpContactPrefix> tlkpContactPrefix
		{
			get
			{
				return this.GetTable<tlkpContactPrefix>();
			}
		}
		
		public System.Data.Linq.Table<tlkpCountry> tlkpCountry
		{
			get
			{
				return this.GetTable<tlkpCountry>();
			}
		}
		
		public System.Data.Linq.Table<tlkpFederalState> tlkpFederalState
		{
			get
			{
				return this.GetTable<tlkpFederalState>();
			}
		}
		
		public System.Data.Linq.Table<tblDepartment> tblDepartment
		{
			get
			{
				return this.GetTable<tblDepartment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblContact")]
	public partial class tblContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContact;
		
		private System.Nullable<long> _FKContactData;
		
		private System.Nullable<long> _FKDepartment;
		
		private System.Nullable<long> _FKCity;
		
		private System.Nullable<long> _FKContactPrefix;
		
		private string _Title;
		
		private string _Name;
		
		private string _Surname;
		
		private string _Middlename;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<System.DateTime> _Birthdate;
		
		private string _Street;
		
		private string _Login;
		
		private string _HomePhone;
		
		private string _MobilePhone;
		
		private string _Skype;
		
		private string _EMail;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private EntityRef<tlkpCity> _tlkpCity;
		
		private EntityRef<tlkpContactPrefix> _tlkpContactPrefix;
		
		private EntityRef<tblDepartment> _tblDepartment;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactChanging(long value);
    partial void OnPKContactChanged();
    partial void OnFKContactDataChanging(System.Nullable<long> value);
    partial void OnFKContactDataChanged();
    partial void OnFKDepartmentChanging(System.Nullable<long> value);
    partial void OnFKDepartmentChanged();
    partial void OnFKCityChanging(System.Nullable<long> value);
    partial void OnFKCityChanged();
    partial void OnFKContactPrefixChanging(System.Nullable<long> value);
    partial void OnFKContactPrefixChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnMiddlenameChanging(string value);
    partial void OnMiddlenameChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnBirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdateChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnSkypeChanging(string value);
    partial void OnSkypeChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    #endregion
		
		public tblContact()
		{
			this._tlkpCity = default(EntityRef<tlkpCity>);
			this._tlkpContactPrefix = default(EntityRef<tlkpContactPrefix>);
			this._tblDepartment = default(EntityRef<tblDepartment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContact", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContact
		{
			get
			{
				return this._PKContact;
			}
			set
			{
				if ((this._PKContact != value))
				{
					this.OnPKContactChanging(value);
					this.SendPropertyChanging();
					this._PKContact = value;
					this.SendPropertyChanged("PKContact");
					this.OnPKContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactData", DbType="BigInt")]
		public System.Nullable<long> FKContactData
		{
			get
			{
				return this._FKContactData;
			}
			set
			{
				if ((this._FKContactData != value))
				{
					this.OnFKContactDataChanging(value);
					this.SendPropertyChanging();
					this._FKContactData = value;
					this.SendPropertyChanged("FKContactData");
					this.OnFKContactDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKDepartment", DbType="BigInt")]
		public System.Nullable<long> FKDepartment
		{
			get
			{
				return this._FKDepartment;
			}
			set
			{
				if ((this._FKDepartment != value))
				{
					if (this._tblDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKDepartmentChanging(value);
					this.SendPropertyChanging();
					this._FKDepartment = value;
					this.SendPropertyChanged("FKDepartment");
					this.OnFKDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKCity", DbType="BigInt")]
		public System.Nullable<long> FKCity
		{
			get
			{
				return this._FKCity;
			}
			set
			{
				if ((this._FKCity != value))
				{
					if (this._tlkpCity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKCityChanging(value);
					this.SendPropertyChanging();
					this._FKCity = value;
					this.SendPropertyChanged("FKCity");
					this.OnFKCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactPrefix", DbType="BigInt")]
		public System.Nullable<long> FKContactPrefix
		{
			get
			{
				return this._FKContactPrefix;
			}
			set
			{
				if ((this._FKContactPrefix != value))
				{
					if (this._tlkpContactPrefix.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKContactPrefixChanging(value);
					this.SendPropertyChanging();
					this._FKContactPrefix = value;
					this.SendPropertyChanged("FKContactPrefix");
					this.OnFKContactPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(255)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middlename", DbType="NVarChar(255)")]
		public string Middlename
		{
			get
			{
				return this._Middlename;
			}
			set
			{
				if ((this._Middlename != value))
				{
					this.OnMiddlenameChanging(value);
					this.SendPropertyChanging();
					this._Middlename = value;
					this.SendPropertyChanged("Middlename");
					this.OnMiddlenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(255)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(50)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(50)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skype", DbType="NVarChar(50)")]
		public string Skype
		{
			get
			{
				return this._Skype;
			}
			set
			{
				if ((this._Skype != value))
				{
					this.OnSkypeChanging(value);
					this.SendPropertyChanging();
					this._Skype = value;
					this.SendPropertyChanged("Skype");
					this.OnSkypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(255)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpCity_tblContact", Storage="_tlkpCity", ThisKey="FKCity", OtherKey="PKCity", IsForeignKey=true)]
		public tlkpCity tlkpCity
		{
			get
			{
				return this._tlkpCity.Entity;
			}
			set
			{
				tlkpCity previousValue = this._tlkpCity.Entity;
				if (((previousValue != value) 
							|| (this._tlkpCity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpCity.Entity = null;
						previousValue.tblContact.Remove(this);
					}
					this._tlkpCity.Entity = value;
					if ((value != null))
					{
						value.tblContact.Add(this);
						this._FKCity = value.PKCity;
					}
					else
					{
						this._FKCity = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpCity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactPrefix_tblContact", Storage="_tlkpContactPrefix", ThisKey="FKContactPrefix", OtherKey="PKContactPrefix", IsForeignKey=true)]
		public tlkpContactPrefix tlkpContactPrefix
		{
			get
			{
				return this._tlkpContactPrefix.Entity;
			}
			set
			{
				tlkpContactPrefix previousValue = this._tlkpContactPrefix.Entity;
				if (((previousValue != value) 
							|| (this._tlkpContactPrefix.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpContactPrefix.Entity = null;
						previousValue.tblContact.Remove(this);
					}
					this._tlkpContactPrefix.Entity = value;
					if ((value != null))
					{
						value.tblContact.Add(this);
						this._FKContactPrefix = value.PKContactPrefix;
					}
					else
					{
						this._FKContactPrefix = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpContactPrefix");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDepartment_tblContact", Storage="_tblDepartment", ThisKey="FKDepartment", OtherKey="PKDepartment", IsForeignKey=true)]
		public tblDepartment tblDepartment
		{
			get
			{
				return this._tblDepartment.Entity;
			}
			set
			{
				tblDepartment previousValue = this._tblDepartment.Entity;
				if (((previousValue != value) 
							|| (this._tblDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDepartment.Entity = null;
						previousValue.tblContact.Remove(this);
					}
					this._tblDepartment.Entity = value;
					if ((value != null))
					{
						value.tblContact.Add(this);
						this._FKDepartment = value.PKDepartment;
					}
					else
					{
						this._FKDepartment = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblDepartment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpCity")]
	public partial class tlkpCity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKCity;
		
		private System.Nullable<long> _FKFederalState;
		
		private string _Name;
		
		private System.Nullable<int> _Zipcode;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private EntitySet<tblContact> _tblContact;
		
		private EntityRef<tlkpFederalState> _tlkpFederalState;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKCityChanging(long value);
    partial void OnPKCityChanged();
    partial void OnFKFederalStateChanging(System.Nullable<long> value);
    partial void OnFKFederalStateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnZipcodeChanging(System.Nullable<int> value);
    partial void OnZipcodeChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    #endregion
		
		public tlkpCity()
		{
			this._tblContact = new EntitySet<tblContact>(new Action<tblContact>(this.attach_tblContact), new Action<tblContact>(this.detach_tblContact));
			this._tlkpFederalState = default(EntityRef<tlkpFederalState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKCity", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKCity
		{
			get
			{
				return this._PKCity;
			}
			set
			{
				if ((this._PKCity != value))
				{
					this.OnPKCityChanging(value);
					this.SendPropertyChanging();
					this._PKCity = value;
					this.SendPropertyChanged("PKCity");
					this.OnPKCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKFederalState", DbType="BigInt")]
		public System.Nullable<long> FKFederalState
		{
			get
			{
				return this._FKFederalState;
			}
			set
			{
				if ((this._FKFederalState != value))
				{
					if (this._tlkpFederalState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKFederalStateChanging(value);
					this.SendPropertyChanging();
					this._FKFederalState = value;
					this.SendPropertyChanged("FKFederalState");
					this.OnFKFederalStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="Int")]
		public System.Nullable<int> Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpCity_tblContact", Storage="_tblContact", ThisKey="PKCity", OtherKey="FKCity")]
		public EntitySet<tblContact> tblContact
		{
			get
			{
				return this._tblContact;
			}
			set
			{
				this._tblContact.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpFederalState_tlkpCity", Storage="_tlkpFederalState", ThisKey="FKFederalState", OtherKey="PKFederalState", IsForeignKey=true)]
		public tlkpFederalState tlkpFederalState
		{
			get
			{
				return this._tlkpFederalState.Entity;
			}
			set
			{
				tlkpFederalState previousValue = this._tlkpFederalState.Entity;
				if (((previousValue != value) 
							|| (this._tlkpFederalState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpFederalState.Entity = null;
						previousValue.tlkpCity.Remove(this);
					}
					this._tlkpFederalState.Entity = value;
					if ((value != null))
					{
						value.tlkpCity.Add(this);
						this._FKFederalState = value.PKFederalState;
					}
					else
					{
						this._FKFederalState = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpFederalState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContact(tblContact entity)
		{
			this.SendPropertyChanging();
			entity.tlkpCity = this;
		}
		
		private void detach_tblContact(tblContact entity)
		{
			this.SendPropertyChanging();
			entity.tlkpCity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpContactPrefix")]
	public partial class tlkpContactPrefix : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactPrefix;
		
		private string _Name;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private EntitySet<tblContact> _tblContact;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactPrefixChanging(long value);
    partial void OnPKContactPrefixChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    #endregion
		
		public tlkpContactPrefix()
		{
			this._tblContact = new EntitySet<tblContact>(new Action<tblContact>(this.attach_tblContact), new Action<tblContact>(this.detach_tblContact));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactPrefix", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactPrefix
		{
			get
			{
				return this._PKContactPrefix;
			}
			set
			{
				if ((this._PKContactPrefix != value))
				{
					this.OnPKContactPrefixChanging(value);
					this.SendPropertyChanging();
					this._PKContactPrefix = value;
					this.SendPropertyChanged("PKContactPrefix");
					this.OnPKContactPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpContactPrefix_tblContact", Storage="_tblContact", ThisKey="PKContactPrefix", OtherKey="FKContactPrefix")]
		public EntitySet<tblContact> tblContact
		{
			get
			{
				return this._tblContact;
			}
			set
			{
				this._tblContact.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContact(tblContact entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactPrefix = this;
		}
		
		private void detach_tblContact(tblContact entity)
		{
			this.SendPropertyChanging();
			entity.tlkpContactPrefix = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpCountry")]
	public partial class tlkpCountry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKCountry;
		
		private string _Name;
		
		private string _Shortname;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private EntitySet<tlkpFederalState> _tlkpFederalState;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKCountryChanging(long value);
    partial void OnPKCountryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortnameChanging(string value);
    partial void OnShortnameChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    #endregion
		
		public tlkpCountry()
		{
			this._tlkpFederalState = new EntitySet<tlkpFederalState>(new Action<tlkpFederalState>(this.attach_tlkpFederalState), new Action<tlkpFederalState>(this.detach_tlkpFederalState));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKCountry", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKCountry
		{
			get
			{
				return this._PKCountry;
			}
			set
			{
				if ((this._PKCountry != value))
				{
					this.OnPKCountryChanging(value);
					this.SendPropertyChanging();
					this._PKCountry = value;
					this.SendPropertyChanged("PKCountry");
					this.OnPKCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortname", DbType="NVarChar(50)")]
		public string Shortname
		{
			get
			{
				return this._Shortname;
			}
			set
			{
				if ((this._Shortname != value))
				{
					this.OnShortnameChanging(value);
					this.SendPropertyChanging();
					this._Shortname = value;
					this.SendPropertyChanged("Shortname");
					this.OnShortnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpCountry_tlkpFederalState", Storage="_tlkpFederalState", ThisKey="PKCountry", OtherKey="FKCountry")]
		public EntitySet<tlkpFederalState> tlkpFederalState
		{
			get
			{
				return this._tlkpFederalState;
			}
			set
			{
				this._tlkpFederalState.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tlkpFederalState(tlkpFederalState entity)
		{
			this.SendPropertyChanging();
			entity.tlkpCountry = this;
		}
		
		private void detach_tlkpFederalState(tlkpFederalState entity)
		{
			this.SendPropertyChanging();
			entity.tlkpCountry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpFederalState")]
	public partial class tlkpFederalState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKFederalState;
		
		private System.Nullable<long> _FKCountry;
		
		private string _Name;
		
		private string _Shortname;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private EntitySet<tlkpCity> _tlkpCity;
		
		private EntityRef<tlkpCountry> _tlkpCountry;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKFederalStateChanging(long value);
    partial void OnPKFederalStateChanged();
    partial void OnFKCountryChanging(System.Nullable<long> value);
    partial void OnFKCountryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortnameChanging(string value);
    partial void OnShortnameChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    #endregion
		
		public tlkpFederalState()
		{
			this._tlkpCity = new EntitySet<tlkpCity>(new Action<tlkpCity>(this.attach_tlkpCity), new Action<tlkpCity>(this.detach_tlkpCity));
			this._tlkpCountry = default(EntityRef<tlkpCountry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKFederalState", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKFederalState
		{
			get
			{
				return this._PKFederalState;
			}
			set
			{
				if ((this._PKFederalState != value))
				{
					this.OnPKFederalStateChanging(value);
					this.SendPropertyChanging();
					this._PKFederalState = value;
					this.SendPropertyChanged("PKFederalState");
					this.OnPKFederalStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKCountry", DbType="BigInt")]
		public System.Nullable<long> FKCountry
		{
			get
			{
				return this._FKCountry;
			}
			set
			{
				if ((this._FKCountry != value))
				{
					if (this._tlkpCountry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKCountryChanging(value);
					this.SendPropertyChanging();
					this._FKCountry = value;
					this.SendPropertyChanged("FKCountry");
					this.OnFKCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortname", DbType="NVarChar(50)")]
		public string Shortname
		{
			get
			{
				return this._Shortname;
			}
			set
			{
				if ((this._Shortname != value))
				{
					this.OnShortnameChanging(value);
					this.SendPropertyChanging();
					this._Shortname = value;
					this.SendPropertyChanged("Shortname");
					this.OnShortnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpFederalState_tlkpCity", Storage="_tlkpCity", ThisKey="PKFederalState", OtherKey="FKFederalState")]
		public EntitySet<tlkpCity> tlkpCity
		{
			get
			{
				return this._tlkpCity;
			}
			set
			{
				this._tlkpCity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpCountry_tlkpFederalState", Storage="_tlkpCountry", ThisKey="FKCountry", OtherKey="PKCountry", IsForeignKey=true)]
		public tlkpCountry tlkpCountry
		{
			get
			{
				return this._tlkpCountry.Entity;
			}
			set
			{
				tlkpCountry previousValue = this._tlkpCountry.Entity;
				if (((previousValue != value) 
							|| (this._tlkpCountry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpCountry.Entity = null;
						previousValue.tlkpFederalState.Remove(this);
					}
					this._tlkpCountry.Entity = value;
					if ((value != null))
					{
						value.tlkpFederalState.Add(this);
						this._FKCountry = value.PKCountry;
					}
					else
					{
						this._FKCountry = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpCountry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tlkpCity(tlkpCity entity)
		{
			this.SendPropertyChanging();
			entity.tlkpFederalState = this;
		}
		
		private void detach_tlkpCity(tlkpCity entity)
		{
			this.SendPropertyChanging();
			entity.tlkpFederalState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDepartment")]
	public partial class tblDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKDepartment;
		
		private System.Nullable<long> _FKDepartment;
		
		private System.Nullable<long> _FKContactHeadOf;
		
		private System.Nullable<long> _FKCompany;
		
		private string _Name;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private EntitySet<tblContact> _tblContact;
		
		private EntitySet<tblDepartment> _tblDepartment2;
		
		private EntityRef<tblDepartment> _tblDepartment1;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKDepartmentChanging(long value);
    partial void OnPKDepartmentChanged();
    partial void OnFKDepartmentChanging(System.Nullable<long> value);
    partial void OnFKDepartmentChanged();
    partial void OnFKContactHeadOfChanging(System.Nullable<long> value);
    partial void OnFKContactHeadOfChanged();
    partial void OnFKCompanyChanging(System.Nullable<long> value);
    partial void OnFKCompanyChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    #endregion
		
		public tblDepartment()
		{
			this._tblContact = new EntitySet<tblContact>(new Action<tblContact>(this.attach_tblContact), new Action<tblContact>(this.detach_tblContact));
			this._tblDepartment2 = new EntitySet<tblDepartment>(new Action<tblDepartment>(this.attach_tblDepartment2), new Action<tblDepartment>(this.detach_tblDepartment2));
			this._tblDepartment1 = default(EntityRef<tblDepartment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKDepartment", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKDepartment
		{
			get
			{
				return this._PKDepartment;
			}
			set
			{
				if ((this._PKDepartment != value))
				{
					this.OnPKDepartmentChanging(value);
					this.SendPropertyChanging();
					this._PKDepartment = value;
					this.SendPropertyChanged("PKDepartment");
					this.OnPKDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKDepartment", DbType="BigInt")]
		public System.Nullable<long> FKDepartment
		{
			get
			{
				return this._FKDepartment;
			}
			set
			{
				if ((this._FKDepartment != value))
				{
					if (this._tblDepartment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKDepartmentChanging(value);
					this.SendPropertyChanging();
					this._FKDepartment = value;
					this.SendPropertyChanged("FKDepartment");
					this.OnFKDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKContactHeadOf", DbType="BigInt")]
		public System.Nullable<long> FKContactHeadOf
		{
			get
			{
				return this._FKContactHeadOf;
			}
			set
			{
				if ((this._FKContactHeadOf != value))
				{
					this.OnFKContactHeadOfChanging(value);
					this.SendPropertyChanging();
					this._FKContactHeadOf = value;
					this.SendPropertyChanged("FKContactHeadOf");
					this.OnFKContactHeadOfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKCompany", DbType="BigInt")]
		public System.Nullable<long> FKCompany
		{
			get
			{
				return this._FKCompany;
			}
			set
			{
				if ((this._FKCompany != value))
				{
					this.OnFKCompanyChanging(value);
					this.SendPropertyChanging();
					this._FKCompany = value;
					this.SendPropertyChanged("FKCompany");
					this.OnFKCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDepartment_tblContact", Storage="_tblContact", ThisKey="PKDepartment", OtherKey="FKDepartment")]
		public EntitySet<tblContact> tblContact
		{
			get
			{
				return this._tblContact;
			}
			set
			{
				this._tblContact.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDepartment_tblDepartment", Storage="_tblDepartment2", ThisKey="PKDepartment", OtherKey="FKDepartment")]
		public EntitySet<tblDepartment> tblDepartment2
		{
			get
			{
				return this._tblDepartment2;
			}
			set
			{
				this._tblDepartment2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDepartment_tblDepartment", Storage="_tblDepartment1", ThisKey="FKDepartment", OtherKey="PKDepartment", IsForeignKey=true)]
		public tblDepartment tblDepartment1
		{
			get
			{
				return this._tblDepartment1.Entity;
			}
			set
			{
				tblDepartment previousValue = this._tblDepartment1.Entity;
				if (((previousValue != value) 
							|| (this._tblDepartment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDepartment1.Entity = null;
						previousValue.tblDepartment2.Remove(this);
					}
					this._tblDepartment1.Entity = value;
					if ((value != null))
					{
						value.tblDepartment2.Add(this);
						this._FKDepartment = value.PKDepartment;
					}
					else
					{
						this._FKDepartment = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblDepartment1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContact(tblContact entity)
		{
			this.SendPropertyChanging();
			entity.tblDepartment = this;
		}
		
		private void detach_tblContact(tblContact entity)
		{
			this.SendPropertyChanging();
			entity.tblDepartment = null;
		}
		
		private void attach_tblDepartment2(tblDepartment entity)
		{
			this.SendPropertyChanging();
			entity.tblDepartment1 = this;
		}
		
		private void detach_tblDepartment2(tblDepartment entity)
		{
			this.SendPropertyChanging();
			entity.tblDepartment1 = null;
		}
	}
}
#pragma warning restore 1591
