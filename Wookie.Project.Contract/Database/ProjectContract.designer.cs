#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wookie.Project.Contract.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BS_PM_Mandant1")]
	public partial class ProjectContractDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InserttlkpProjectContractStatus(tlkpProjectContractStatus instance);
    partial void UpdatetlkpProjectContractStatus(tlkpProjectContractStatus instance);
    partial void DeletetlkpProjectContractStatus(tlkpProjectContractStatus instance);
    partial void InserttlkpProjectContractType(tlkpProjectContractType instance);
    partial void UpdatetlkpProjectContractType(tlkpProjectContractType instance);
    partial void DeletetlkpProjectContractType(tlkpProjectContractType instance);
    partial void InserttblClusterContract(tblClusterContract instance);
    partial void UpdatetblClusterContract(tblClusterContract instance);
    partial void DeletetblClusterContract(tblClusterContract instance);
    partial void InserttblProjectContract(tblProjectContract instance);
    partial void UpdatetblProjectContract(tblProjectContract instance);
    partial void DeletetblProjectContract(tblProjectContract instance);
    #endregion
		
		public ProjectContractDataContext() : 
				base(global::Wookie.Project.Contract.Properties.Settings.Default.BS_PM_Mandant1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectContractDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectContractDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectContractDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectContractDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tlkpProjectContractStatus> tlkpProjectContractStatus
		{
			get
			{
				return this.GetTable<tlkpProjectContractStatus>();
			}
		}
		
		public System.Data.Linq.Table<tlkpProjectContractType> tlkpProjectContractType
		{
			get
			{
				return this.GetTable<tlkpProjectContractType>();
			}
		}
		
		public System.Data.Linq.Table<tblClusterContract> tblClusterContract
		{
			get
			{
				return this.GetTable<tblClusterContract>();
			}
		}
		
		public System.Data.Linq.Table<tblProjectContract> tblProjectContract
		{
			get
			{
				return this.GetTable<tblProjectContract>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpProjectContractStatus")]
	public partial class tlkpProjectContractStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKProjectContractStatus;
		
		private string _Name;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblProjectContract> _tblProjectContract;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKProjectContractStatusChanging(long value);
    partial void OnPKProjectContractStatusChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpProjectContractStatus()
		{
			this._tblProjectContract = new EntitySet<tblProjectContract>(new Action<tblProjectContract>(this.attach_tblProjectContract), new Action<tblProjectContract>(this.detach_tblProjectContract));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKProjectContractStatus", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKProjectContractStatus
		{
			get
			{
				return this._PKProjectContractStatus;
			}
			set
			{
				if ((this._PKProjectContractStatus != value))
				{
					this.OnPKProjectContractStatusChanging(value);
					this.SendPropertyChanging();
					this._PKProjectContractStatus = value;
					this.SendPropertyChanged("PKProjectContractStatus");
					this.OnPKProjectContractStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpProjectContractStatus_tblProjectContract", Storage="_tblProjectContract", ThisKey="PKProjectContractStatus", OtherKey="FKProjectContractStatus")]
		public EntitySet<tblProjectContract> tblProjectContract
		{
			get
			{
				return this._tblProjectContract;
			}
			set
			{
				this._tblProjectContract.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProjectContract(tblProjectContract entity)
		{
			this.SendPropertyChanging();
			entity.tlkpProjectContractStatus = this;
		}
		
		private void detach_tblProjectContract(tblProjectContract entity)
		{
			this.SendPropertyChanging();
			entity.tlkpProjectContractStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpProjectContractType")]
	public partial class tlkpProjectContractType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKProjectContractType;
		
		private string _Name;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblProjectContract> _tblProjectContract;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKProjectContractTypeChanging(long value);
    partial void OnPKProjectContractTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpProjectContractType()
		{
			this._tblProjectContract = new EntitySet<tblProjectContract>(new Action<tblProjectContract>(this.attach_tblProjectContract), new Action<tblProjectContract>(this.detach_tblProjectContract));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKProjectContractType", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKProjectContractType
		{
			get
			{
				return this._PKProjectContractType;
			}
			set
			{
				if ((this._PKProjectContractType != value))
				{
					this.OnPKProjectContractTypeChanging(value);
					this.SendPropertyChanging();
					this._PKProjectContractType = value;
					this.SendPropertyChanged("PKProjectContractType");
					this.OnPKProjectContractTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpProjectContractType_tblProjectContract", Storage="_tblProjectContract", ThisKey="PKProjectContractType", OtherKey="FKProjectContractType")]
		public EntitySet<tblProjectContract> tblProjectContract
		{
			get
			{
				return this._tblProjectContract;
			}
			set
			{
				this._tblProjectContract.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProjectContract(tblProjectContract entity)
		{
			this.SendPropertyChanging();
			entity.tlkpProjectContractType = this;
		}
		
		private void detach_tblProjectContract(tblProjectContract entity)
		{
			this.SendPropertyChanging();
			entity.tlkpProjectContractType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblClusterContract")]
	public partial class tblClusterContract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKClusterContract;
		
		private System.Nullable<long> _FKProject;
		
		private System.Nullable<long> _FKCluster;
		
		private System.Nullable<long> _FKClusterContractStatus;
		
		private string _Name;
		
		private System.Nullable<double> _Budget;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntitySet<tblProjectContract> _tblProjectContract;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKClusterContractChanging(long value);
    partial void OnPKClusterContractChanged();
    partial void OnFKProjectChanging(System.Nullable<long> value);
    partial void OnFKProjectChanged();
    partial void OnFKClusterChanging(System.Nullable<long> value);
    partial void OnFKClusterChanged();
    partial void OnFKClusterContractStatusChanging(System.Nullable<long> value);
    partial void OnFKClusterContractStatusChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBudgetChanging(System.Nullable<double> value);
    partial void OnBudgetChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tblClusterContract()
		{
			this._tblProjectContract = new EntitySet<tblProjectContract>(new Action<tblProjectContract>(this.attach_tblProjectContract), new Action<tblProjectContract>(this.detach_tblProjectContract));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKClusterContract", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKClusterContract
		{
			get
			{
				return this._PKClusterContract;
			}
			set
			{
				if ((this._PKClusterContract != value))
				{
					this.OnPKClusterContractChanging(value);
					this.SendPropertyChanging();
					this._PKClusterContract = value;
					this.SendPropertyChanged("PKClusterContract");
					this.OnPKClusterContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKProject", DbType="BigInt")]
		public System.Nullable<long> FKProject
		{
			get
			{
				return this._FKProject;
			}
			set
			{
				if ((this._FKProject != value))
				{
					this.OnFKProjectChanging(value);
					this.SendPropertyChanging();
					this._FKProject = value;
					this.SendPropertyChanged("FKProject");
					this.OnFKProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKCluster", DbType="BigInt")]
		public System.Nullable<long> FKCluster
		{
			get
			{
				return this._FKCluster;
			}
			set
			{
				if ((this._FKCluster != value))
				{
					this.OnFKClusterChanging(value);
					this.SendPropertyChanging();
					this._FKCluster = value;
					this.SendPropertyChanged("FKCluster");
					this.OnFKClusterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKClusterContractStatus", DbType="BigInt")]
		public System.Nullable<long> FKClusterContractStatus
		{
			get
			{
				return this._FKClusterContractStatus;
			}
			set
			{
				if ((this._FKClusterContractStatus != value))
				{
					this.OnFKClusterContractStatusChanging(value);
					this.SendPropertyChanging();
					this._FKClusterContractStatus = value;
					this.SendPropertyChanged("FKClusterContractStatus");
					this.OnFKClusterContractStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Budget", DbType="Float")]
		public System.Nullable<double> Budget
		{
			get
			{
				return this._Budget;
			}
			set
			{
				if ((this._Budget != value))
				{
					this.OnBudgetChanging(value);
					this.SendPropertyChanging();
					this._Budget = value;
					this.SendPropertyChanged("Budget");
					this.OnBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblClusterContract_tblProjectContract", Storage="_tblProjectContract", ThisKey="PKClusterContract", OtherKey="FKClusterContract")]
		public EntitySet<tblProjectContract> tblProjectContract
		{
			get
			{
				return this._tblProjectContract;
			}
			set
			{
				this._tblProjectContract.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProjectContract(tblProjectContract entity)
		{
			this.SendPropertyChanging();
			entity.tblClusterContract = this;
		}
		
		private void detach_tblProjectContract(tblProjectContract entity)
		{
			this.SendPropertyChanging();
			entity.tblClusterContract = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProjectContract")]
	public partial class tblProjectContract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKProjectContract;
		
		private System.Nullable<long> _FKClusterContract;
		
		private System.Nullable<long> _FKProjectContractType;
		
		private System.Nullable<long> _FKProjectContractStatus;
		
		private string _ContractNumber;
		
		private string _ContractName;
		
		private System.Data.Linq.Binary _ContractFile;
		
		private System.Data.Linq.Binary _ContractCalculation;
		
		private System.Nullable<double> _Price;
		
		private System.Nullable<System.DateTime> _HandoverDate;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _ProjectNumber;
		
		private System.Nullable<System.DateTime> _PlannedAcceptanceDate;
		
		private System.Nullable<System.DateTime> _AcceptanceDate;
		
		private System.Nullable<bool> _Acceptance;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
		private EntityRef<tblClusterContract> _tblClusterContract;
		
		private EntityRef<tlkpProjectContractStatus> _tlkpProjectContractStatus;
		
		private EntityRef<tlkpProjectContractType> _tlkpProjectContractType;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKProjectContractChanging(long value);
    partial void OnPKProjectContractChanged();
    partial void OnFKClusterContractChanging(System.Nullable<long> value);
    partial void OnFKClusterContractChanged();
    partial void OnFKProjectContractTypeChanging(System.Nullable<long> value);
    partial void OnFKProjectContractTypeChanged();
    partial void OnFKProjectContractStatusChanging(System.Nullable<long> value);
    partial void OnFKProjectContractStatusChanged();
    partial void OnContractNumberChanging(string value);
    partial void OnContractNumberChanged();
    partial void OnContractNameChanging(string value);
    partial void OnContractNameChanged();
    partial void OnContractFileChanging(System.Data.Linq.Binary value);
    partial void OnContractFileChanged();
    partial void OnContractCalculationChanging(System.Data.Linq.Binary value);
    partial void OnContractCalculationChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnHandoverDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHandoverDateChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnProjectNumberChanging(string value);
    partial void OnProjectNumberChanged();
    partial void OnPlannedAcceptanceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlannedAcceptanceDateChanged();
    partial void OnAcceptanceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptanceDateChanged();
    partial void OnAcceptanceChanging(System.Nullable<bool> value);
    partial void OnAcceptanceChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tblProjectContract()
		{
			this._tblClusterContract = default(EntityRef<tblClusterContract>);
			this._tlkpProjectContractStatus = default(EntityRef<tlkpProjectContractStatus>);
			this._tlkpProjectContractType = default(EntityRef<tlkpProjectContractType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKProjectContract", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKProjectContract
		{
			get
			{
				return this._PKProjectContract;
			}
			set
			{
				if ((this._PKProjectContract != value))
				{
					this.OnPKProjectContractChanging(value);
					this.SendPropertyChanging();
					this._PKProjectContract = value;
					this.SendPropertyChanged("PKProjectContract");
					this.OnPKProjectContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKClusterContract", DbType="BigInt")]
		public System.Nullable<long> FKClusterContract
		{
			get
			{
				return this._FKClusterContract;
			}
			set
			{
				if ((this._FKClusterContract != value))
				{
					if (this._tblClusterContract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKClusterContractChanging(value);
					this.SendPropertyChanging();
					this._FKClusterContract = value;
					this.SendPropertyChanged("FKClusterContract");
					this.OnFKClusterContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKProjectContractType", DbType="BigInt")]
		public System.Nullable<long> FKProjectContractType
		{
			get
			{
				return this._FKProjectContractType;
			}
			set
			{
				if ((this._FKProjectContractType != value))
				{
					if (this._tlkpProjectContractType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKProjectContractTypeChanging(value);
					this.SendPropertyChanging();
					this._FKProjectContractType = value;
					this.SendPropertyChanged("FKProjectContractType");
					this.OnFKProjectContractTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKProjectContractStatus", DbType="BigInt")]
		public System.Nullable<long> FKProjectContractStatus
		{
			get
			{
				return this._FKProjectContractStatus;
			}
			set
			{
				if ((this._FKProjectContractStatus != value))
				{
					if (this._tlkpProjectContractStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKProjectContractStatusChanging(value);
					this.SendPropertyChanging();
					this._FKProjectContractStatus = value;
					this.SendPropertyChanged("FKProjectContractStatus");
					this.OnFKProjectContractStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNumber", DbType="NVarChar(50)")]
		public string ContractNumber
		{
			get
			{
				return this._ContractNumber;
			}
			set
			{
				if ((this._ContractNumber != value))
				{
					this.OnContractNumberChanging(value);
					this.SendPropertyChanging();
					this._ContractNumber = value;
					this.SendPropertyChanged("ContractNumber");
					this.OnContractNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractName", DbType="NVarChar(255)")]
		public string ContractName
		{
			get
			{
				return this._ContractName;
			}
			set
			{
				if ((this._ContractName != value))
				{
					this.OnContractNameChanging(value);
					this.SendPropertyChanging();
					this._ContractName = value;
					this.SendPropertyChanged("ContractName");
					this.OnContractNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractFile", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ContractFile
		{
			get
			{
				return this._ContractFile;
			}
			set
			{
				if ((this._ContractFile != value))
				{
					this.OnContractFileChanging(value);
					this.SendPropertyChanging();
					this._ContractFile = value;
					this.SendPropertyChanged("ContractFile");
					this.OnContractFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractCalculation", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ContractCalculation
		{
			get
			{
				return this._ContractCalculation;
			}
			set
			{
				if ((this._ContractCalculation != value))
				{
					this.OnContractCalculationChanging(value);
					this.SendPropertyChanging();
					this._ContractCalculation = value;
					this.SendPropertyChanged("ContractCalculation");
					this.OnContractCalculationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandoverDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HandoverDate
		{
			get
			{
				return this._HandoverDate;
			}
			set
			{
				if ((this._HandoverDate != value))
				{
					this.OnHandoverDateChanging(value);
					this.SendPropertyChanging();
					this._HandoverDate = value;
					this.SendPropertyChanged("HandoverDate");
					this.OnHandoverDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectNumber", DbType="NVarChar(255)")]
		public string ProjectNumber
		{
			get
			{
				return this._ProjectNumber;
			}
			set
			{
				if ((this._ProjectNumber != value))
				{
					this.OnProjectNumberChanging(value);
					this.SendPropertyChanging();
					this._ProjectNumber = value;
					this.SendPropertyChanged("ProjectNumber");
					this.OnProjectNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlannedAcceptanceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlannedAcceptanceDate
		{
			get
			{
				return this._PlannedAcceptanceDate;
			}
			set
			{
				if ((this._PlannedAcceptanceDate != value))
				{
					this.OnPlannedAcceptanceDateChanging(value);
					this.SendPropertyChanging();
					this._PlannedAcceptanceDate = value;
					this.SendPropertyChanged("PlannedAcceptanceDate");
					this.OnPlannedAcceptanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptanceDate
		{
			get
			{
				return this._AcceptanceDate;
			}
			set
			{
				if ((this._AcceptanceDate != value))
				{
					this.OnAcceptanceDateChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceDate = value;
					this.SendPropertyChanged("AcceptanceDate");
					this.OnAcceptanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acceptance", DbType="Bit")]
		public System.Nullable<bool> Acceptance
		{
			get
			{
				return this._Acceptance;
			}
			set
			{
				if ((this._Acceptance != value))
				{
					this.OnAcceptanceChanging(value);
					this.SendPropertyChanging();
					this._Acceptance = value;
					this.SendPropertyChanged("Acceptance");
					this.OnAcceptanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblClusterContract_tblProjectContract", Storage="_tblClusterContract", ThisKey="FKClusterContract", OtherKey="PKClusterContract", IsForeignKey=true)]
		public tblClusterContract tblClusterContract
		{
			get
			{
				return this._tblClusterContract.Entity;
			}
			set
			{
				tblClusterContract previousValue = this._tblClusterContract.Entity;
				if (((previousValue != value) 
							|| (this._tblClusterContract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblClusterContract.Entity = null;
						previousValue.tblProjectContract.Remove(this);
					}
					this._tblClusterContract.Entity = value;
					if ((value != null))
					{
						value.tblProjectContract.Add(this);
						this._FKClusterContract = value.PKClusterContract;
					}
					else
					{
						this._FKClusterContract = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblClusterContract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpProjectContractStatus_tblProjectContract", Storage="_tlkpProjectContractStatus", ThisKey="FKProjectContractStatus", OtherKey="PKProjectContractStatus", IsForeignKey=true)]
		public tlkpProjectContractStatus tlkpProjectContractStatus
		{
			get
			{
				return this._tlkpProjectContractStatus.Entity;
			}
			set
			{
				tlkpProjectContractStatus previousValue = this._tlkpProjectContractStatus.Entity;
				if (((previousValue != value) 
							|| (this._tlkpProjectContractStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpProjectContractStatus.Entity = null;
						previousValue.tblProjectContract.Remove(this);
					}
					this._tlkpProjectContractStatus.Entity = value;
					if ((value != null))
					{
						value.tblProjectContract.Add(this);
						this._FKProjectContractStatus = value.PKProjectContractStatus;
					}
					else
					{
						this._FKProjectContractStatus = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpProjectContractStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpProjectContractType_tblProjectContract", Storage="_tlkpProjectContractType", ThisKey="FKProjectContractType", OtherKey="PKProjectContractType", IsForeignKey=true)]
		public tlkpProjectContractType tlkpProjectContractType
		{
			get
			{
				return this._tlkpProjectContractType.Entity;
			}
			set
			{
				tlkpProjectContractType previousValue = this._tlkpProjectContractType.Entity;
				if (((previousValue != value) 
							|| (this._tlkpProjectContractType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpProjectContractType.Entity = null;
						previousValue.tblProjectContract.Remove(this);
					}
					this._tlkpProjectContractType.Entity = value;
					if ((value != null))
					{
						value.tblProjectContract.Add(this);
						this._FKProjectContractType = value.PKProjectContractType;
					}
					else
					{
						this._FKProjectContractType = default(Nullable<long>);
					}
					this.SendPropertyChanged("tlkpProjectContractType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
