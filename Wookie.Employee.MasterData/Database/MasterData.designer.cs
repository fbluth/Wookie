#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wookie.Employee.MasterData.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BS_PM_Mandant1")]
	public partial class MasterDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InserttlkpContactPrefix(tlkpContactPrefix instance);
    partial void UpdatetlkpContactPrefix(tlkpContactPrefix instance);
    partial void DeletetlkpContactPrefix(tlkpContactPrefix instance);
    partial void InserttlkpCountry(tlkpCountry instance);
    partial void UpdatetlkpCountry(tlkpCountry instance);
    partial void DeletetlkpCountry(tlkpCountry instance);
    #endregion
		
		public MasterDataDataContext() : 
				base(global::Wookie.Employee.MasterData.Properties.Settings.Default.BS_PM_Mandant1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MasterDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MasterDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MasterDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MasterDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tlkpContactPrefix> tlkpContactPrefix
		{
			get
			{
				return this.GetTable<tlkpContactPrefix>();
			}
		}
		
		public System.Data.Linq.Table<tlkpCountry> tlkpCountry
		{
			get
			{
				return this.GetTable<tlkpCountry>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpContactPrefix")]
	public partial class tlkpContactPrefix : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKContactPrefix;
		
		private string _Name;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKContactPrefixChanging(long value);
    partial void OnPKContactPrefixChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpContactPrefix()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKContactPrefix", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKContactPrefix
		{
			get
			{
				return this._PKContactPrefix;
			}
			set
			{
				if ((this._PKContactPrefix != value))
				{
					this.OnPKContactPrefixChanging(value);
					this.SendPropertyChanging();
					this._PKContactPrefix = value;
					this.SendPropertyChanged("PKContactPrefix");
					this.OnPKContactPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpCountry")]
	public partial class tlkpCountry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PKCountry;
		
		private string _Name;
		
		private string _Shortname;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<long> _FKUserCreated;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<long> _FKUserChanged;
		
		private System.Nullable<System.DateTime> _ChangedOn;
		
		private System.Nullable<System.Guid> _UniqueIdentifier;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKCountryChanging(long value);
    partial void OnPKCountryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortnameChanging(string value);
    partial void OnShortnameChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnFKUserCreatedChanging(System.Nullable<long> value);
    partial void OnFKUserCreatedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnFKUserChangedChanging(System.Nullable<long> value);
    partial void OnFKUserChangedChanged();
    partial void OnChangedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedOnChanged();
    partial void OnUniqueIdentifierChanging(System.Nullable<System.Guid> value);
    partial void OnUniqueIdentifierChanged();
    #endregion
		
		public tlkpCountry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKCountry", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PKCountry
		{
			get
			{
				return this._PKCountry;
			}
			set
			{
				if ((this._PKCountry != value))
				{
					this.OnPKCountryChanging(value);
					this.SendPropertyChanging();
					this._PKCountry = value;
					this.SendPropertyChanged("PKCountry");
					this.OnPKCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortname", DbType="NVarChar(50)")]
		public string Shortname
		{
			get
			{
				return this._Shortname;
			}
			set
			{
				if ((this._Shortname != value))
				{
					this.OnShortnameChanging(value);
					this.SendPropertyChanging();
					this._Shortname = value;
					this.SendPropertyChanged("Shortname");
					this.OnShortnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserCreated", DbType="BigInt")]
		public System.Nullable<long> FKUserCreated
		{
			get
			{
				return this._FKUserCreated;
			}
			set
			{
				if ((this._FKUserCreated != value))
				{
					this.OnFKUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._FKUserCreated = value;
					this.SendPropertyChanged("FKUserCreated");
					this.OnFKUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKUserChanged", DbType="BigInt")]
		public System.Nullable<long> FKUserChanged
		{
			get
			{
				return this._FKUserChanged;
			}
			set
			{
				if ((this._FKUserChanged != value))
				{
					this.OnFKUserChangedChanging(value);
					this.SendPropertyChanging();
					this._FKUserChanged = value;
					this.SendPropertyChanged("FKUserChanged");
					this.OnFKUserChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIdentifier", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniqueIdentifier
		{
			get
			{
				return this._UniqueIdentifier;
			}
			set
			{
				if ((this._UniqueIdentifier != value))
				{
					this.OnUniqueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UniqueIdentifier = value;
					this.SendPropertyChanged("UniqueIdentifier");
					this.OnUniqueIdentifierChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
